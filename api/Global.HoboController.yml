### YamlMime:ManagedReference
items:
- uid: Global.HoboController
  commentId: T:Global.HoboController
  id: HoboController
  parent: Global
  children:
  - Global.HoboController.AnimationTimeScale
  - Global.HoboController.isMove
  - Global.HoboController.moveDirection
  - Global.HoboController.Speed
  - Global.HoboController.WalkFrames
  langs:
  - csharp
  - vb
  name: HoboController
  nameWithType: HoboController
  fullName: HoboController
  type: Class
  source:
    id: HoboController
    path: ''
    startLine: 68
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: 'public class HoboController : MonoBehaviour'
    content.vb: >-
      Public Class HoboController
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.HoboController.isMove
  commentId: F:Global.HoboController.isMove
  id: isMove
  parent: Global.HoboController
  langs:
  - csharp
  - vb
  name: isMove
  nameWithType: HoboController.isMove
  fullName: HoboController.isMove
  type: Field
  source:
    id: isMove
    path: ''
    startLine: 73
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public bool isMove
    return:
      type: System.Boolean
    content.vb: Public isMove As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.HoboController.moveDirection
  commentId: F:Global.HoboController.moveDirection
  id: moveDirection
  parent: Global.HoboController
  langs:
  - csharp
  - vb
  name: moveDirection
  nameWithType: HoboController.moveDirection
  fullName: HoboController.moveDirection
  type: Field
  source:
    id: moveDirection
    path: ''
    startLine: 76
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public Vector2 moveDirection
    return:
      type: Global.Vector2
    content.vb: Public moveDirection As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.HoboController.Speed
  commentId: F:Global.HoboController.Speed
  id: Speed
  parent: Global.HoboController
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: HoboController.Speed
  fullName: HoboController.Speed
  type: Field
  source:
    id: Speed
    path: ''
    startLine: 77
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public float Speed
    return:
      type: System.Single
    content.vb: Public Speed As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.HoboController.AnimationTimeScale
  commentId: F:Global.HoboController.AnimationTimeScale
  id: AnimationTimeScale
  parent: Global.HoboController
  langs:
  - csharp
  - vb
  name: AnimationTimeScale
  nameWithType: HoboController.AnimationTimeScale
  fullName: HoboController.AnimationTimeScale
  type: Field
  source:
    id: AnimationTimeScale
    path: ''
    startLine: 79
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public float AnimationTimeScale
    return:
      type: System.Single
    content.vb: Public AnimationTimeScale As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.HoboController.WalkFrames
  commentId: F:Global.HoboController.WalkFrames
  id: WalkFrames
  parent: Global.HoboController
  langs:
  - csharp
  - vb
  name: WalkFrames
  nameWithType: HoboController.WalkFrames
  fullName: HoboController.WalkFrames
  type: Field
  source:
    id: WalkFrames
    path: ''
    startLine: 81
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<Texture2D> WalkFrames
    return:
      type: System.Collections.Generic.List{Texture2D}
    content.vb: Public WalkFrames As List(Of Texture2D)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Collections.Generic.List{Texture2D}
  commentId: T:System.Collections.Generic.List{Texture2D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Texture2D>
  nameWithType: List<Texture2D>
  fullName: System.Collections.Generic.List<Texture2D>
  nameWithType.vb: List(Of Texture2D)
  fullName.vb: System.Collections.Generic.List(Of Texture2D)
  name.vb: List(Of Texture2D)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: Texture2D
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
