{
  "api/Audio.html": {
    "href": "api/Audio.html",
    "title": "Namespace Audio | PAdam Softworks",
    "keywords": "Namespace Audio Classes MixerSliderVolume Klasa odpowiadająca za ustawienie odpowiednich ustawień dźwiękowych"
  },
  "api/Audio.MixerSliderVolume.html": {
    "href": "api/Audio.MixerSliderVolume.html",
    "title": "Class MixerSliderVolume | PAdam Softworks",
    "keywords": "Class MixerSliderVolume Klasa odpowiadająca za ustawienie odpowiednich ustawień dźwiękowych Inheritance Object MixerSliderVolume Namespace : Audio Assembly : cs.temp.dll.dll Syntax public class MixerSliderVolume : MonoBehaviour"
  },
  "api/ClipperLib.Clipper.html": {
    "href": "api/ClipperLib.Clipper.html",
    "title": "Class Clipper | PAdam Softworks",
    "keywords": "Class Clipper Inheritance Object ClipperBase Clipper Inherited Members ClipperBase.horizontal ClipperBase.Skip ClipperBase.Unassigned ClipperBase.tolerance ClipperBase.PreserveCollinear ClipperBase.SlopesEqual(IntPoint, IntPoint, IntPoint, Boolean) ClipperBase.SlopesEqual(IntPoint, IntPoint, IntPoint, IntPoint, Boolean) ClipperBase.Clear() ClipperBase.AddPath(List<IntPoint>, PolyType, Boolean) ClipperBase.AddPaths(List<List<IntPoint>>, PolyType, Boolean) ClipperBase.PopLocalMinima() ClipperBase.GetBounds(List<List<IntPoint>>) Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public class Clipper : ClipperBase Constructors Clipper(Int32) Declaration public Clipper(int InitOptions = 0) Parameters Type Name Description Int32 InitOptions Fields ioPreserveCollinear Declaration public const int ioPreserveCollinear = 4 Field Value Type Description Int32 ioReverseSolution Declaration public const int ioReverseSolution = 1 Field Value Type Description Int32 ioStrictlySimple Declaration public const int ioStrictlySimple = 2 Field Value Type Description Int32 Properties ReverseSolution Declaration public bool ReverseSolution { get; set; } Property Value Type Description Boolean StrictlySimple Declaration public bool StrictlySimple { get; set; } Property Value Type Description Boolean Methods Area(List<IntPoint>) Declaration public static double Area(List<IntPoint> poly) Parameters Type Name Description List < IntPoint > poly Returns Type Description Double CleanPolygon(List<IntPoint>, Double) Declaration public static List<IntPoint> CleanPolygon(List<IntPoint> path, double distance = 1.415) Parameters Type Name Description List < IntPoint > path Double distance Returns Type Description List < IntPoint > CleanPolygons(List<List<IntPoint>>, Double) Declaration public static List<List<IntPoint>> CleanPolygons(List<List<IntPoint>> polys, double distance = 1.415) Parameters Type Name Description List < List < IntPoint >> polys Double distance Returns Type Description List < List < IntPoint >> ClosedPathsFromPolyTree(PolyTree) Declaration public static List<List<IntPoint>> ClosedPathsFromPolyTree(PolyTree polytree) Parameters Type Name Description PolyTree polytree Returns Type Description List < List < IntPoint >> Execute(ClipType, PolyTree) Declaration public bool Execute(ClipType clipType, PolyTree polytree) Parameters Type Name Description ClipType clipType PolyTree polytree Returns Type Description Boolean Execute(ClipType, PolyTree, PolyFillType, PolyFillType) Declaration public bool Execute(ClipType clipType, PolyTree polytree, PolyFillType subjFillType, PolyFillType clipFillType) Parameters Type Name Description ClipType clipType PolyTree polytree PolyFillType subjFillType PolyFillType clipFillType Returns Type Description Boolean Execute(ClipType, List<List<IntPoint>>) Declaration public bool Execute(ClipType clipType, List<List<IntPoint>> solution) Parameters Type Name Description ClipType clipType List < List < IntPoint >> solution Returns Type Description Boolean Execute(ClipType, List<List<IntPoint>>, PolyFillType, PolyFillType) Declaration public bool Execute(ClipType clipType, List<List<IntPoint>> solution, PolyFillType subjFillType, PolyFillType clipFillType) Parameters Type Name Description ClipType clipType List < List < IntPoint >> solution PolyFillType subjFillType PolyFillType clipFillType Returns Type Description Boolean MinkowskiDiff(List<IntPoint>, List<IntPoint>) Declaration public static List<List<IntPoint>> MinkowskiDiff(List<IntPoint> poly1, List<IntPoint> poly2) Parameters Type Name Description List < IntPoint > poly1 List < IntPoint > poly2 Returns Type Description List < List < IntPoint >> MinkowskiSum(List<IntPoint>, List<IntPoint>, Boolean) Declaration public static List<List<IntPoint>> MinkowskiSum(List<IntPoint> pattern, List<IntPoint> path, bool pathIsClosed) Parameters Type Name Description List < IntPoint > pattern List < IntPoint > path Boolean pathIsClosed Returns Type Description List < List < IntPoint >> MinkowskiSum(List<IntPoint>, List<List<IntPoint>>, PolyFillType, Boolean) Declaration public static List<List<IntPoint>> MinkowskiSum(List<IntPoint> pattern, List<List<IntPoint>> paths, PolyFillType pathFillType, bool pathIsClosed) Parameters Type Name Description List < IntPoint > pattern List < List < IntPoint >> paths PolyFillType pathFillType Boolean pathIsClosed Returns Type Description List < List < IntPoint >> OffsetPaths(List<List<IntPoint>>, Double, JoinType, EndType_, Double) Declaration public static List<List<IntPoint>> OffsetPaths(List<List<IntPoint>> polys, double delta, JoinType jointype, EndType_ endtype, double MiterLimit) Parameters Type Name Description List < List < IntPoint >> polys Double delta JoinType jointype EndType_ endtype Double MiterLimit Returns Type Description List < List < IntPoint >> OpenPathsFromPolyTree(PolyTree) Declaration public static List<List<IntPoint>> OpenPathsFromPolyTree(PolyTree polytree) Parameters Type Name Description PolyTree polytree Returns Type Description List < List < IntPoint >> Orientation(List<IntPoint>) Declaration public static bool Orientation(List<IntPoint> poly) Parameters Type Name Description List < IntPoint > poly Returns Type Description Boolean PointInPolygon(IntPoint, List<IntPoint>) Declaration public static int PointInPolygon(IntPoint pt, List<IntPoint> path) Parameters Type Name Description IntPoint pt List < IntPoint > path Returns Type Description Int32 PolyTreeToPaths(PolyTree) Declaration public static List<List<IntPoint>> PolyTreeToPaths(PolyTree polytree) Parameters Type Name Description PolyTree polytree Returns Type Description List < List < IntPoint >> Reset() Declaration protected override void Reset() Overrides ClipperBase.Reset() ReversePaths(List<List<IntPoint>>) Declaration public static void ReversePaths(List<List<IntPoint>> polys) Parameters Type Name Description List < List < IntPoint >> polys SimplifyPolygon(List<IntPoint>, PolyFillType) Declaration public static List<List<IntPoint>> SimplifyPolygon(List<IntPoint> poly, PolyFillType fillType = PolyFillType.pftEvenOdd) Parameters Type Name Description List < IntPoint > poly PolyFillType fillType Returns Type Description List < List < IntPoint >> SimplifyPolygons(List<List<IntPoint>>, PolyFillType) Declaration public static List<List<IntPoint>> SimplifyPolygons(List<List<IntPoint>> polys, PolyFillType fillType = PolyFillType.pftEvenOdd) Parameters Type Name Description List < List < IntPoint >> polys PolyFillType fillType Returns Type Description List < List < IntPoint >>"
  },
  "api/ClipperLib.ClipperBase.html": {
    "href": "api/ClipperLib.ClipperBase.html",
    "title": "Class ClipperBase | PAdam Softworks",
    "keywords": "Class ClipperBase Inheritance Object ClipperBase Clipper Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public class ClipperBase Fields horizontal Declaration protected const double horizontal = -3.4E+38 Field Value Type Description Double Skip Declaration protected const int Skip = -2 Field Value Type Description Int32 tolerance Declaration protected const double tolerance = 1E-20 Field Value Type Description Double Unassigned Declaration protected const int Unassigned = -1 Field Value Type Description Int32 Properties PreserveCollinear Declaration public bool PreserveCollinear { get; set; } Property Value Type Description Boolean Methods AddPath(List<IntPoint>, PolyType, Boolean) Declaration public bool AddPath(List<IntPoint> pg, PolyType polyType, bool Closed) Parameters Type Name Description List < IntPoint > pg PolyType polyType Boolean Closed Returns Type Description Boolean AddPaths(List<List<IntPoint>>, PolyType, Boolean) Declaration public bool AddPaths(List<List<IntPoint>> ppg, PolyType polyType, bool closed) Parameters Type Name Description List < List < IntPoint >> ppg PolyType polyType Boolean closed Returns Type Description Boolean Clear() Declaration public virtual void Clear() GetBounds(List<List<IntPoint>>) Declaration public static IntRect GetBounds(List<List<IntPoint>> paths) Parameters Type Name Description List < List < IntPoint >> paths Returns Type Description IntRect PopLocalMinima() Declaration protected void PopLocalMinima() Reset() Declaration protected virtual void Reset() SlopesEqual(IntPoint, IntPoint, IntPoint, IntPoint, Boolean) Declaration protected static bool SlopesEqual(IntPoint pt1, IntPoint pt2, IntPoint pt3, IntPoint pt4, bool UseFullRange) Parameters Type Name Description IntPoint pt1 IntPoint pt2 IntPoint pt3 IntPoint pt4 Boolean UseFullRange Returns Type Description Boolean SlopesEqual(IntPoint, IntPoint, IntPoint, Boolean) Declaration protected static bool SlopesEqual(IntPoint pt1, IntPoint pt2, IntPoint pt3, bool UseFullRange) Parameters Type Name Description IntPoint pt1 IntPoint pt2 IntPoint pt3 Boolean UseFullRange Returns Type Description Boolean"
  },
  "api/ClipperLib.ClipperOffset.html": {
    "href": "api/ClipperLib.ClipperOffset.html",
    "title": "Class ClipperOffset | PAdam Softworks",
    "keywords": "Class ClipperOffset Inheritance Object ClipperOffset Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public class ClipperOffset Constructors ClipperOffset(Double, Double) Declaration public ClipperOffset(double miterLimit = 2, double arcTolerance = 0.25) Parameters Type Name Description Double miterLimit Double arcTolerance Properties ArcTolerance Declaration public double ArcTolerance { get; set; } Property Value Type Description Double MiterLimit Declaration public double MiterLimit { get; set; } Property Value Type Description Double Methods AddPath(List<IntPoint>, JoinType, EndType) Declaration public void AddPath(List<IntPoint> path, JoinType joinType, EndType endType) Parameters Type Name Description List < IntPoint > path JoinType joinType EndType endType AddPaths(List<List<IntPoint>>, JoinType, EndType) Declaration public void AddPaths(List<List<IntPoint>> paths, JoinType joinType, EndType endType) Parameters Type Name Description List < List < IntPoint >> paths JoinType joinType EndType endType Clear() Declaration public void Clear() Execute(ref PolyTree, Double) Declaration public void Execute(ref PolyTree solution, double delta) Parameters Type Name Description PolyTree solution Double delta Execute(ref List<List<IntPoint>>, Double) Declaration public void Execute(ref List<List<IntPoint>> solution, double delta) Parameters Type Name Description List < List < IntPoint >> solution Double delta"
  },
  "api/ClipperLib.ClipType.html": {
    "href": "api/ClipperLib.ClipType.html",
    "title": "Enum ClipType | PAdam Softworks",
    "keywords": "Enum ClipType Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public enum ClipType Fields Name Description ctDifference ctIntersection ctUnion ctXor"
  },
  "api/ClipperLib.DoublePoint.html": {
    "href": "api/ClipperLib.DoublePoint.html",
    "title": "Struct DoublePoint | PAdam Softworks",
    "keywords": "Struct DoublePoint Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public struct DoublePoint Constructors DoublePoint(DoublePoint) Declaration public DoublePoint(DoublePoint dp) Parameters Type Name Description DoublePoint dp DoublePoint(IntPoint) Declaration public DoublePoint(IntPoint ip) Parameters Type Name Description IntPoint ip DoublePoint(Double, Double) Declaration public DoublePoint(double x = 0, double y = 0) Parameters Type Name Description Double x Double y Fields X Declaration public double X Field Value Type Description Double Y Declaration public double Y Field Value Type Description Double"
  },
  "api/ClipperLib.EndType.html": {
    "href": "api/ClipperLib.EndType.html",
    "title": "Enum EndType | PAdam Softworks",
    "keywords": "Enum EndType Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public enum EndType Fields Name Description etClosedLine etClosedPolygon etOpenButt etOpenRound etOpenSquare"
  },
  "api/ClipperLib.EndType_.html": {
    "href": "api/ClipperLib.EndType_.html",
    "title": "Enum EndType_ | PAdam Softworks",
    "keywords": "Enum EndType_ Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public enum EndType_ Fields Name Description etButt etClosed etRound etSquare"
  },
  "api/ClipperLib.html": {
    "href": "api/ClipperLib.html",
    "title": "Namespace ClipperLib | PAdam Softworks",
    "keywords": "Namespace ClipperLib Classes Clipper ClipperBase ClipperOffset IntersectNode MyIntersectNodeSort PolyNode PolyTree Structs DoublePoint IntPoint IntRect Enums ClipType EndType EndType_ JoinType PolyFillType PolyType"
  },
  "api/ClipperLib.IntersectNode.html": {
    "href": "api/ClipperLib.IntersectNode.html",
    "title": "Class IntersectNode | PAdam Softworks",
    "keywords": "Class IntersectNode Inheritance Object IntersectNode Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public class IntersectNode"
  },
  "api/ClipperLib.IntPoint.html": {
    "href": "api/ClipperLib.IntPoint.html",
    "title": "Struct IntPoint | PAdam Softworks",
    "keywords": "Struct IntPoint Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public struct IntPoint Constructors IntPoint(IntPoint) Declaration public IntPoint(IntPoint pt) Parameters Type Name Description IntPoint pt IntPoint(Int64, Int64) Declaration public IntPoint(Int64 X, Int64 Y) Parameters Type Name Description Int64 X Int64 Y IntPoint(Double, Double) Declaration public IntPoint(double x, double y) Parameters Type Name Description Double x Double y Fields X Declaration public Int64 X Field Value Type Description Int64 Y Declaration public Int64 Y Field Value Type Description Int64 Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators Equality(IntPoint, IntPoint) Declaration public static bool operator ==(IntPoint a, IntPoint b) Parameters Type Name Description IntPoint a IntPoint b Returns Type Description Boolean Inequality(IntPoint, IntPoint) Declaration public static bool operator !=(IntPoint a, IntPoint b) Parameters Type Name Description IntPoint a IntPoint b Returns Type Description Boolean"
  },
  "api/ClipperLib.IntRect.html": {
    "href": "api/ClipperLib.IntRect.html",
    "title": "Struct IntRect | PAdam Softworks",
    "keywords": "Struct IntRect Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public struct IntRect Constructors IntRect(IntRect) Declaration public IntRect(IntRect ir) Parameters Type Name Description IntRect ir IntRect(Int64, Int64, Int64, Int64) Declaration public IntRect(Int64 l, Int64 t, Int64 r, Int64 b) Parameters Type Name Description Int64 l Int64 t Int64 r Int64 b Fields bottom Declaration public Int64 bottom Field Value Type Description Int64 left Declaration public Int64 left Field Value Type Description Int64 right Declaration public Int64 right Field Value Type Description Int64 top Declaration public Int64 top Field Value Type Description Int64"
  },
  "api/ClipperLib.JoinType.html": {
    "href": "api/ClipperLib.JoinType.html",
    "title": "Enum JoinType | PAdam Softworks",
    "keywords": "Enum JoinType Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public enum JoinType Fields Name Description jtMiter jtRound jtSquare"
  },
  "api/ClipperLib.MyIntersectNodeSort.html": {
    "href": "api/ClipperLib.MyIntersectNodeSort.html",
    "title": "Class MyIntersectNodeSort | PAdam Softworks",
    "keywords": "Class MyIntersectNodeSort Inheritance Object MyIntersectNodeSort Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public class MyIntersectNodeSort : IComparer<IntersectNode> Methods Compare(IntersectNode, IntersectNode) Declaration public int Compare(IntersectNode node1, IntersectNode node2) Parameters Type Name Description IntersectNode node1 IntersectNode node2 Returns Type Description Int32"
  },
  "api/ClipperLib.PolyFillType.html": {
    "href": "api/ClipperLib.PolyFillType.html",
    "title": "Enum PolyFillType | PAdam Softworks",
    "keywords": "Enum PolyFillType Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public enum PolyFillType Fields Name Description pftEvenOdd pftNegative pftNonZero pftPositive"
  },
  "api/ClipperLib.PolyNode.html": {
    "href": "api/ClipperLib.PolyNode.html",
    "title": "Class PolyNode | PAdam Softworks",
    "keywords": "Class PolyNode Inheritance Object PolyNode PolyTree Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public class PolyNode Properties ChildCount Declaration public int ChildCount { get; } Property Value Type Description Int32 Childs Declaration public List<PolyNode> Childs { get; } Property Value Type Description List < PolyNode > Contour Declaration public List<IntPoint> Contour { get; } Property Value Type Description List < IntPoint > IsHole Declaration public bool IsHole { get; } Property Value Type Description Boolean IsOpen Declaration public bool IsOpen { get; set; } Property Value Type Description Boolean Parent Declaration public PolyNode Parent { get; } Property Value Type Description PolyNode Methods GetNext() Declaration public PolyNode GetNext() Returns Type Description PolyNode"
  },
  "api/ClipperLib.PolyTree.html": {
    "href": "api/ClipperLib.PolyTree.html",
    "title": "Class PolyTree | PAdam Softworks",
    "keywords": "Class PolyTree Inheritance Object PolyNode PolyTree Inherited Members PolyNode.ChildCount PolyNode.Contour PolyNode.GetNext() PolyNode.Childs PolyNode.Parent PolyNode.IsHole PolyNode.IsOpen Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public class PolyTree : PolyNode Properties Total Declaration public int Total { get; } Property Value Type Description Int32 Methods Clear() Declaration public void Clear() Finalize() Declaration protected void Finalize() GetFirst() Declaration public PolyNode GetFirst() Returns Type Description PolyNode"
  },
  "api/ClipperLib.PolyType.html": {
    "href": "api/ClipperLib.PolyType.html",
    "title": "Enum PolyType | PAdam Softworks",
    "keywords": "Enum PolyType Namespace : ClipperLib Assembly : cs.temp.dll.dll Syntax public enum PolyType Fields Name Description ptClip ptSubject"
  },
  "api/Core.BaseInteractOnTrigger2D.html": {
    "href": "api/Core.BaseInteractOnTrigger2D.html",
    "title": "Class BaseInteractOnTrigger2D | PAdam Softworks",
    "keywords": "Class BaseInteractOnTrigger2D Inheritance Object BaseInteractOnTrigger2D InteractOnTrigger2D InteractOnTrigger2DTimed Namespace : Core Assembly : cs.temp.dll.dll Syntax public abstract class BaseInteractOnTrigger2D : MonoBehaviour Fields onEnter Declaration protected UnityEvent<GameObject> onEnter Field Value Type Description UnityEvent < GameObject > onExit Declaration protected UnityEvent<GameObject> onExit Field Value Type Description UnityEvent < GameObject > tags Declaration protected List<string> tags Field Value Type Description List < String > Methods OnTriggerEnter2D(Collider2D) Declaration protected abstract void OnTriggerEnter2D(Collider2D other) Parameters Type Name Description Collider2D other OnTriggerExit2D(Collider2D) Declaration protected abstract void OnTriggerExit2D(Collider2D other) Parameters Type Name Description Collider2D other Reset() Przywracanie stanu do stanu początkowego Declaration public virtual void Reset()"
  },
  "api/Core.DestroyGameObject.html": {
    "href": "api/Core.DestroyGameObject.html",
    "title": "Class DestroyGameObject | PAdam Softworks",
    "keywords": "Class DestroyGameObject Inheritance Object DestroyGameObject Namespace : Core Assembly : cs.temp.dll.dll Syntax public class DestroyGameObject : MonoBehaviour Methods Destroy(Int32) Niszczy obiekt Declaration public void Destroy(int delay = 0) Parameters Type Name Description Int32 delay Opcjonalne opóźnienie w sekundach"
  },
  "api/Core.html": {
    "href": "api/Core.html",
    "title": "Namespace Core | PAdam Softworks",
    "keywords": "Namespace Core Classes BaseInteractOnTrigger2D DestroyGameObject InteractOnCollision2D InteractOnTrigger2D Klasa pomocniczy wowyłująca eventy po ztriggerowaniu collidera 2d InteractOnTrigger2DTimed Klasa pomocniczy wowyłująca eventy po ztriggerowaniu collidera 2d oraz wykonująca event po upłynięciu czasu SetAnimatorBoolFlag"
  },
  "api/Core.InteractOnCollision2D.html": {
    "href": "api/Core.InteractOnCollision2D.html",
    "title": "Class InteractOnCollision2D | PAdam Softworks",
    "keywords": "Class InteractOnCollision2D Inheritance Object InteractOnCollision2D Namespace : Core Assembly : cs.temp.dll.dll Syntax public class InteractOnCollision2D : MonoBehaviour"
  },
  "api/Core.InteractOnTrigger2D.html": {
    "href": "api/Core.InteractOnTrigger2D.html",
    "title": "Class InteractOnTrigger2D | PAdam Softworks",
    "keywords": "Class InteractOnTrigger2D Klasa pomocniczy wowyłująca eventy po ztriggerowaniu collidera 2d Inheritance Object BaseInteractOnTrigger2D InteractOnTrigger2D Inherited Members BaseInteractOnTrigger2D.tags BaseInteractOnTrigger2D.onEnter BaseInteractOnTrigger2D.onExit BaseInteractOnTrigger2D.Reset() Namespace : Core Assembly : cs.temp.dll.dll Syntax public class InteractOnTrigger2D : BaseInteractOnTrigger2D Methods OnTriggerEnter2D(Collider2D) Declaration protected override void OnTriggerEnter2D(Collider2D other) Parameters Type Name Description Collider2D other Overrides BaseInteractOnTrigger2D.OnTriggerEnter2D(Collider2D) OnTriggerExit2D(Collider2D) Declaration protected override void OnTriggerExit2D(Collider2D other) Parameters Type Name Description Collider2D other Overrides BaseInteractOnTrigger2D.OnTriggerExit2D(Collider2D)"
  },
  "api/Core.InteractOnTrigger2DTimed.html": {
    "href": "api/Core.InteractOnTrigger2DTimed.html",
    "title": "Class InteractOnTrigger2DTimed | PAdam Softworks",
    "keywords": "Class InteractOnTrigger2DTimed Klasa pomocniczy wowyłująca eventy po ztriggerowaniu collidera 2d oraz wykonująca event po upłynięciu czasu Inheritance Object BaseInteractOnTrigger2D InteractOnTrigger2DTimed Inherited Members BaseInteractOnTrigger2D.tags BaseInteractOnTrigger2D.onEnter BaseInteractOnTrigger2D.onExit Namespace : Core Assembly : cs.temp.dll.dll Syntax public class InteractOnTrigger2DTimed : BaseInteractOnTrigger2D Properties Completed Jeżeli prawda to event Core.InteractOnTrigger2DTimed.onTimePassed nie zostanie wykonany Declaration public bool Completed { get; set; } Property Value Type Description Boolean Methods OnTriggerEnter2D(Collider2D) Declaration protected override void OnTriggerEnter2D(Collider2D other) Parameters Type Name Description Collider2D other Overrides BaseInteractOnTrigger2D.OnTriggerEnter2D(Collider2D) OnTriggerExit2D(Collider2D) Declaration protected override void OnTriggerExit2D(Collider2D other) Parameters Type Name Description Collider2D other Overrides BaseInteractOnTrigger2D.OnTriggerExit2D(Collider2D) Reset() Przywracanie stanu do stanu początkowego Declaration public override void Reset() Overrides BaseInteractOnTrigger2D.Reset()"
  },
  "api/Core.SetAnimatorBoolFlag.html": {
    "href": "api/Core.SetAnimatorBoolFlag.html",
    "title": "Class SetAnimatorBoolFlag | PAdam Softworks",
    "keywords": "Class SetAnimatorBoolFlag Inheritance Object SetAnimatorBoolFlag Namespace : Core Assembly : cs.temp.dll.dll Syntax public class SetAnimatorBoolFlag : MonoBehaviour Methods SetFlag() Ustawia zdefiniowaną flagę na animatorze z podaną wartością Declaration public void SetFlag()"
  },
  "api/Delaunay.DelaunayHelpers.html": {
    "href": "api/Delaunay.DelaunayHelpers.html",
    "title": "Class DelaunayHelpers | PAdam Softworks",
    "keywords": "Class DelaunayHelpers Inheritance Object DelaunayHelpers Namespace : Delaunay Assembly : cs.temp.dll.dll Syntax public static class DelaunayHelpers Methods DelaunayLinesForEdges(List<Edge>) Declaration public static List<LineSegment> DelaunayLinesForEdges(List<Edge> edges) Parameters Type Name Description List < Edge > edges Returns Type Description List < LineSegment > Kruskal(List<LineSegment>, KruskalType) Declaration public static List<LineSegment> Kruskal(List<LineSegment> lineSegments, KruskalType type = KruskalType.MINIMUM) Parameters Type Name Description List < LineSegment > lineSegments KruskalType type Returns Type Description List < LineSegment > SelectEdgesForSitePoint(Vector2, List<Edge>) Declaration public static List<Edge> SelectEdgesForSitePoint(Vector2 coord, List<Edge> edgesToTest) Parameters Type Name Description Vector2 coord List < Edge > edgesToTest Returns Type Description List < Edge > SelectNonIntersectingEdges(List<Edge>) Declaration public static List<Edge> SelectNonIntersectingEdges(List<Edge> edgesToTest) Parameters Type Name Description List < Edge > edgesToTest Returns Type Description List < Edge > VisibleLineSegments(List<Edge>) Declaration public static List<LineSegment> VisibleLineSegments(List<Edge> edges) Parameters Type Name Description List < Edge > edges Returns Type Description List < LineSegment >"
  },
  "api/Delaunay.Edge.html": {
    "href": "api/Delaunay.Edge.html",
    "title": "Class Edge | PAdam Softworks",
    "keywords": "Class Edge Inheritance Object Edge Namespace : Delaunay Assembly : cs.temp.dll.dll Syntax public sealed class Edge Fields a Declaration public float a Field Value Type Description Single b Declaration public float b Field Value Type Description Single c Declaration public float c Field Value Type Description Single DELETED Declaration public static readonly Edge DELETED Field Value Type Description Edge Properties clippedEnds Declaration public Dictionary<Side, Nullable<Vector2>> clippedEnds { get; } Property Value Type Description Dictionary < Side , Nullable < Vector2 >> leftSite Declaration public Site leftSite { get; set; } Property Value Type Description Site leftVertex Declaration public Vertex leftVertex { get; } Property Value Type Description Vertex rightSite Declaration public Site rightSite { get; set; } Property Value Type Description Site rightVertex Declaration public Vertex rightVertex { get; } Property Value Type Description Vertex visible Declaration public bool visible { get; } Property Value Type Description Boolean Methods ClipVertices(Rect) Declaration public void ClipVertices(Rect bounds) Parameters Type Name Description Rect bounds CompareSitesDistances(Edge, Edge) Declaration public static int CompareSitesDistances(Edge edge0, Edge edge1) Parameters Type Name Description Edge edge0 Edge edge1 Returns Type Description Int32 CompareSitesDistances_MAX(Edge, Edge) Declaration public static int CompareSitesDistances_MAX(Edge edge0, Edge edge1) Parameters Type Name Description Edge edge0 Edge edge1 Returns Type Description Int32 CreateBisectingEdge(Site, Site) Declaration public static Edge CreateBisectingEdge(Site site0, Site site1) Parameters Type Name Description Site site0 Site site1 Returns Type Description Edge DelaunayLine() Declaration public LineSegment DelaunayLine() Returns Type Description LineSegment Dispose() Declaration public void Dispose() IsPartOfConvexHull() Declaration public bool IsPartOfConvexHull() Returns Type Description Boolean SetVertex(Side, Vertex) Declaration public void SetVertex(Side leftRight, Vertex v) Parameters Type Name Description Side leftRight Vertex v Site(Side) Declaration public Site Site(Side leftRight) Parameters Type Name Description Side leftRight Returns Type Description Site SitesDistance() Declaration public float SitesDistance() Returns Type Description Single ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Vertex(Side) Declaration public Vertex Vertex(Side leftRight) Parameters Type Name Description Side leftRight Returns Type Description Vertex VoronoiEdge() Declaration public LineSegment VoronoiEdge() Returns Type Description LineSegment"
  },
  "api/Delaunay.Geo.Circle.html": {
    "href": "api/Delaunay.Geo.Circle.html",
    "title": "Class Circle | PAdam Softworks",
    "keywords": "Class Circle Inheritance Object Circle Namespace : Delaunay.Geo Assembly : cs.temp.dll.dll Syntax public sealed class Circle Constructors Circle(Single, Single, Single) Declaration public Circle(float centerX, float centerY, float radius) Parameters Type Name Description Single centerX Single centerY Single radius Fields center Declaration public Vector2 center Field Value Type Description Vector2 radius Declaration public float radius Field Value Type Description Single Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Delaunay.Geo.html": {
    "href": "api/Delaunay.Geo.html",
    "title": "Namespace Delaunay.Geo | PAdam Softworks",
    "keywords": "Namespace Delaunay.Geo Classes Circle LineSegment Polygon Enums Winding"
  },
  "api/Delaunay.Geo.LineSegment.html": {
    "href": "api/Delaunay.Geo.LineSegment.html",
    "title": "Class LineSegment | PAdam Softworks",
    "keywords": "Class LineSegment Inheritance Object LineSegment Namespace : Delaunay.Geo Assembly : cs.temp.dll.dll Syntax public sealed class LineSegment Constructors LineSegment(Nullable<Vector2>, Nullable<Vector2>) Declaration public LineSegment(Nullable<Vector2> p0, Nullable<Vector2> p1) Parameters Type Name Description Nullable < Vector2 > p0 Nullable < Vector2 > p1 Fields p0 Declaration public Nullable<Vector2> p0 Field Value Type Description Nullable < Vector2 > p1 Declaration public Nullable<Vector2> p1 Field Value Type Description Nullable < Vector2 > Methods CompareLengths(LineSegment, LineSegment) Declaration public static int CompareLengths(LineSegment edge0, LineSegment edge1) Parameters Type Name Description LineSegment edge0 LineSegment edge1 Returns Type Description Int32 CompareLengths_MAX(LineSegment, LineSegment) Declaration public static int CompareLengths_MAX(LineSegment segment0, LineSegment segment1) Parameters Type Name Description LineSegment segment0 LineSegment segment1 Returns Type Description Int32"
  },
  "api/Delaunay.Geo.Polygon.html": {
    "href": "api/Delaunay.Geo.Polygon.html",
    "title": "Class Polygon | PAdam Softworks",
    "keywords": "Class Polygon Inheritance Object Polygon Namespace : Delaunay.Geo Assembly : cs.temp.dll.dll Syntax public sealed class Polygon Constructors Polygon(List<Vector2>) Declaration public Polygon(List<Vector2> vertices) Parameters Type Name Description List < Vector2 > vertices Methods Area() Declaration public float Area() Returns Type Description Single Winding() Declaration public Winding Winding() Returns Type Description Winding"
  },
  "api/Delaunay.Geo.Winding.html": {
    "href": "api/Delaunay.Geo.Winding.html",
    "title": "Enum Winding | PAdam Softworks",
    "keywords": "Enum Winding Namespace : Delaunay.Geo Assembly : cs.temp.dll.dll Syntax public enum Winding Fields Name Description CLOCKWISE COUNTERCLOCKWISE NONE"
  },
  "api/Delaunay.Halfedge.html": {
    "href": "api/Delaunay.Halfedge.html",
    "title": "Class Halfedge | PAdam Softworks",
    "keywords": "Class Halfedge Inheritance Object Halfedge Implements IDisposable Namespace : Delaunay Assembly : cs.temp.dll.dll Syntax public sealed class Halfedge : IDisposable Constructors Halfedge(Edge, Nullable<Side>) Declaration public Halfedge(Edge edge = null, Nullable<Side> lr = null) Parameters Type Name Description Edge edge Nullable < Side > lr Fields edge Declaration public Edge edge Field Value Type Description Edge edgeListLeftNeighbor Declaration public Halfedge edgeListLeftNeighbor Field Value Type Description Halfedge edgeListRightNeighbor Declaration public Halfedge edgeListRightNeighbor Field Value Type Description Halfedge leftRight Declaration public Nullable<Side> leftRight Field Value Type Description Nullable < Side > nextInPriorityQueue Declaration public Halfedge nextInPriorityQueue Field Value Type Description Halfedge vertex Declaration public Vertex vertex Field Value Type Description Vertex ystar Declaration public float ystar Field Value Type Description Single Methods Create(Edge, Nullable<Side>) Declaration public static Halfedge Create(Edge edge, Nullable<Side> lr) Parameters Type Name Description Edge edge Nullable < Side > lr Returns Type Description Halfedge CreateDummy() Declaration public static Halfedge CreateDummy() Returns Type Description Halfedge Dispose() Declaration public void Dispose() ReallyDispose() Declaration public void ReallyDispose() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements IDisposable"
  },
  "api/Delaunay.html": {
    "href": "api/Delaunay.html",
    "title": "Namespace Delaunay | PAdam Softworks",
    "keywords": "Namespace Delaunay Classes DelaunayHelpers Edge Halfedge Node Site SiteList Triangle Vertex Voronoi Interfaces ICoord Enums KruskalType VertexOrSite"
  },
  "api/Delaunay.ICoord.html": {
    "href": "api/Delaunay.ICoord.html",
    "title": "Interface ICoord | PAdam Softworks",
    "keywords": "Interface ICoord Namespace : Delaunay Assembly : cs.temp.dll.dll Syntax public interface ICoord Properties Coord Declaration Vector2 Coord { get; } Property Value Type Description Vector2"
  },
  "api/Delaunay.KruskalType.html": {
    "href": "api/Delaunay.KruskalType.html",
    "title": "Enum KruskalType | PAdam Softworks",
    "keywords": "Enum KruskalType Namespace : Delaunay Assembly : cs.temp.dll.dll Syntax public enum KruskalType Fields Name Description MAXIMUM MINIMUM"
  },
  "api/Delaunay.LR.html": {
    "href": "api/Delaunay.LR.html",
    "title": "Namespace Delaunay.LR | PAdam Softworks",
    "keywords": "Namespace Delaunay.LR Classes SideHelper Enums Side"
  },
  "api/Delaunay.LR.Side.html": {
    "href": "api/Delaunay.LR.Side.html",
    "title": "Enum Side | PAdam Softworks",
    "keywords": "Enum Side Namespace : Delaunay.LR Assembly : cs.temp.dll.dll Syntax public enum Side Fields Name Description LEFT RIGHT"
  },
  "api/Delaunay.LR.SideHelper.html": {
    "href": "api/Delaunay.LR.SideHelper.html",
    "title": "Class SideHelper | PAdam Softworks",
    "keywords": "Class SideHelper Inheritance Object SideHelper Namespace : Delaunay.LR Assembly : cs.temp.dll.dll Syntax public class SideHelper Methods Other(Side) Declaration public static Side Other(Side leftRight) Parameters Type Name Description Side leftRight Returns Type Description Side"
  },
  "api/Delaunay.Node.html": {
    "href": "api/Delaunay.Node.html",
    "title": "Class Node | PAdam Softworks",
    "keywords": "Class Node Inheritance Object Node Namespace : Delaunay Assembly : cs.temp.dll.dll Syntax public class Node Fields parent Declaration public Node parent Field Value Type Description Node pool Declaration public static Stack<Node> pool Field Value Type Description Stack < Node > treeSize Declaration public int treeSize Field Value Type Description Int32"
  },
  "api/Delaunay.Site.html": {
    "href": "api/Delaunay.Site.html",
    "title": "Class Site | PAdam Softworks",
    "keywords": "Class Site Inheritance Object Site Implements ICoord IComparable Namespace : Delaunay Assembly : cs.temp.dll.dll Syntax public sealed class Site : ICoord, IComparable Fields color Declaration public uint color Field Value Type Description UInt32 weight Declaration public float weight Field Value Type Description Single Properties Coord Declaration public Vector2 Coord { get; } Property Value Type Description Vector2 edgeOrientations Declaration public List<Side> edgeOrientations { get; } Property Value Type Description List < Side > x Declaration public float x { get; } Property Value Type Description Single Methods AddEdge(Edge) Declaration public void AddEdge(Edge edge) Parameters Type Name Description Edge edge CloseEnough(Vector2, Vector2) Declaration public static bool CloseEnough(Vector2 p0, Vector2 p1) Parameters Type Name Description Vector2 p0 Vector2 p1 Returns Type Description Boolean CompareTo(Object) Declaration public int CompareTo(object obj) Parameters Type Name Description Object obj Returns Type Description Int32 Create(Vector2, UInt32, Single, UInt32) Declaration public static Site Create(Vector2 p, uint index, float weight, uint color) Parameters Type Name Description Vector2 p UInt32 index Single weight UInt32 color Returns Type Description Site Dispose() Declaration public void Dispose() Dist(ICoord) Declaration public float Dist(ICoord p) Parameters Type Name Description ICoord p Returns Type Description Single NearestEdge() Declaration public Edge NearestEdge() Returns Type Description Edge NeighborSites() Declaration public List<Site> NeighborSites() Returns Type Description List < Site > ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements ICoord IComparable"
  },
  "api/Delaunay.SiteList.html": {
    "href": "api/Delaunay.SiteList.html",
    "title": "Class SiteList | PAdam Softworks",
    "keywords": "Class SiteList Inheritance Object SiteList Implements IDisposable Namespace : Delaunay Assembly : cs.temp.dll.dll Syntax public sealed class SiteList : IDisposable Constructors SiteList() Declaration public SiteList() Fields _sites Declaration public List<Site> _sites Field Value Type Description List < Site > Properties Count Declaration public int Count { get; } Property Value Type Description Int32 Methods Add(Site) Declaration public int Add(Site site) Parameters Type Name Description Site site Returns Type Description Int32 Circles() Declaration public List<Circle> Circles() Returns Type Description List < Circle > Dispose() Declaration public void Dispose() NearestSitePoint(Single, Single) Declaration public Nullable<Vector2> NearestSitePoint(float x, float y) Parameters Type Name Description Single x Single y Returns Type Description Nullable < Vector2 > Next() Declaration public Site Next() Returns Type Description Site Regions(Rect) Declaration public List<List<Vector2>> Regions(Rect plotBounds) Parameters Type Name Description Rect plotBounds Returns Type Description List < List < Vector2 >> SiteColors() Declaration public List<uint> SiteColors() Returns Type Description List < UInt32 > SiteCoords() Declaration public List<Vector2> SiteCoords() Returns Type Description List < Vector2 > Implements IDisposable"
  },
  "api/Delaunay.Triangle.html": {
    "href": "api/Delaunay.Triangle.html",
    "title": "Class Triangle | PAdam Softworks",
    "keywords": "Class Triangle Inheritance Object Triangle Namespace : Delaunay Assembly : cs.temp.dll.dll Syntax public sealed class Triangle : IDisposable Constructors Triangle(Site, Site, Site) Declaration public Triangle(Site a, Site b, Site c) Parameters Type Name Description Site a Site b Site c Properties sites Declaration public List<Site> sites { get; } Property Value Type Description List < Site > Methods Dispose() Declaration public void Dispose()"
  },
  "api/Delaunay.Utils.html": {
    "href": "api/Delaunay.Utils.html",
    "title": "Namespace Delaunay.Utils | PAdam Softworks",
    "keywords": "Namespace Delaunay.Utils Interfaces IDisposable"
  },
  "api/Delaunay.Utils.IDisposable.html": {
    "href": "api/Delaunay.Utils.IDisposable.html",
    "title": "Interface IDisposable | PAdam Softworks",
    "keywords": "Interface IDisposable Namespace : Delaunay.Utils Assembly : cs.temp.dll.dll Syntax public interface IDisposable Methods Dispose() Declaration void Dispose()"
  },
  "api/Delaunay.Vertex.html": {
    "href": "api/Delaunay.Vertex.html",
    "title": "Class Vertex | PAdam Softworks",
    "keywords": "Class Vertex Inheritance Object Vertex Implements ICoord Namespace : Delaunay Assembly : cs.temp.dll.dll Syntax public sealed class Vertex : ICoord Constructors Vertex(Single, Single) Declaration public Vertex(float x, float y) Parameters Type Name Description Single x Single y Fields VERTEX_AT_INFINITY Declaration public static readonly Vertex VERTEX_AT_INFINITY Field Value Type Description Vertex Properties Coord Declaration public Vector2 Coord { get; } Property Value Type Description Vector2 vertexIndex Declaration public int vertexIndex { get; } Property Value Type Description Int32 x Declaration public float x { get; } Property Value Type Description Single y Declaration public float y { get; } Property Value Type Description Single Methods Dispose() Declaration public void Dispose() Intersect(Halfedge, Halfedge) Declaration public static Vertex Intersect(Halfedge halfedge0, Halfedge halfedge1) Parameters Type Name Description Halfedge halfedge0 Halfedge halfedge1 Returns Type Description Vertex SetIndex() Declaration public void SetIndex() ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Implements ICoord"
  },
  "api/Delaunay.VertexOrSite.html": {
    "href": "api/Delaunay.VertexOrSite.html",
    "title": "Enum VertexOrSite | PAdam Softworks",
    "keywords": "Enum VertexOrSite Namespace : Delaunay Assembly : cs.temp.dll.dll Syntax public enum VertexOrSite Fields Name Description SITE VERTEX"
  },
  "api/Delaunay.Voronoi.html": {
    "href": "api/Delaunay.Voronoi.html",
    "title": "Class Voronoi | PAdam Softworks",
    "keywords": "Class Voronoi Inheritance Object Voronoi Implements IDisposable Namespace : Delaunay Assembly : cs.temp.dll.dll Syntax public sealed class Voronoi : IDisposable Constructors Voronoi(List<Vector2>, List<UInt32>, Rect) Declaration public Voronoi(List<Vector2> points, List<uint> colors, Rect plotBounds) Parameters Type Name Description List < Vector2 > points List < UInt32 > colors Rect plotBounds Properties plotBounds Declaration public Rect plotBounds { get; } Property Value Type Description Rect Methods Circles() Declaration public List<Circle> Circles() Returns Type Description List < Circle > CompareByYThenX(Site, Site) Declaration public static int CompareByYThenX(Site s1, Site s2) Parameters Type Name Description Site s1 Site s2 Returns Type Description Int32 CompareByYThenX(Site, Vector2) Declaration public static int CompareByYThenX(Site s1, Vector2 s2) Parameters Type Name Description Site s1 Vector2 s2 Returns Type Description Int32 DelaunayLinesForSite(Vector2) Declaration public List<LineSegment> DelaunayLinesForSite(Vector2 coord) Parameters Type Name Description Vector2 coord Returns Type Description List < LineSegment > DelaunayTriangulation() Declaration public List<LineSegment> DelaunayTriangulation() Returns Type Description List < LineSegment > Dispose() Declaration public void Dispose() Edges() Declaration public List<Edge> Edges() Returns Type Description List < Edge > Hull() Declaration public List<LineSegment> Hull() Returns Type Description List < LineSegment > HullPointsInOrder() Declaration public List<Vector2> HullPointsInOrder() Returns Type Description List < Vector2 > NearestSitePoint(Single, Single) Declaration public Nullable<Vector2> NearestSitePoint(float x, float y) Parameters Type Name Description Single x Single y Returns Type Description Nullable < Vector2 > NeighborSitesForSite(Vector2) Declaration public List<Vector2> NeighborSitesForSite(Vector2 coord) Parameters Type Name Description Vector2 coord Returns Type Description List < Vector2 > Region(Vector2) Declaration public List<Vector2> Region(Vector2 p) Parameters Type Name Description Vector2 p Returns Type Description List < Vector2 > Regions() Declaration public List<List<Vector2>> Regions() Returns Type Description List < List < Vector2 >> SiteColors() Declaration public List<uint> SiteColors() Returns Type Description List < UInt32 > SiteCoords() Declaration public List<Vector2> SiteCoords() Returns Type Description List < Vector2 > Sites() Declaration public SiteList Sites() Returns Type Description SiteList SpanningTree(KruskalType) Declaration public List<LineSegment> SpanningTree(KruskalType type = KruskalType.MINIMUM) Parameters Type Name Description KruskalType type Returns Type Description List < LineSegment > Triangles() Declaration public List<Triangle> Triangles() Returns Type Description List < Triangle > VoronoiBoundaryForSite(Vector2) Declaration public List<LineSegment> VoronoiBoundaryForSite(Vector2 coord) Parameters Type Name Description Vector2 coord Returns Type Description List < LineSegment > VoronoiDiagram() Declaration public List<LineSegment> VoronoiDiagram() Returns Type Description List < LineSegment > Implements IDisposable"
  },
  "api/Editor.ExplodableEditor.html": {
    "href": "api/Editor.ExplodableEditor.html",
    "title": "Class ExplodableEditor | PAdam Softworks",
    "keywords": "Class ExplodableEditor Inheritance Object ExplodableEditor Namespace : Editor Assembly : cs.temp.dll.dll Syntax public class ExplodableEditor : UnityEditor.Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Editor.html": {
    "href": "api/Editor.html",
    "title": "Namespace Editor | PAdam Softworks",
    "keywords": "Namespace Editor Classes ExplodableEditor"
  },
  "api/Enemy.BaseEnemy.html": {
    "href": "api/Enemy.BaseEnemy.html",
    "title": "Class BaseEnemy | PAdam Softworks",
    "keywords": "Class BaseEnemy Inheritance Object BaseEnemy RollingBallController Implements IEnemy Namespace : Enemy Assembly : cs.temp.dll.dll Syntax public abstract class BaseEnemy : MonoBehaviour, IEnemy Fields scoreOnKill Ilość punktów jaką zdobędzie gracz po zabiciu przeciwnika Declaration public int scoreOnKill Field Value Type Description Int32 Implements IEnemy"
  },
  "api/Enemy.Healthbar.html": {
    "href": "api/Enemy.Healthbar.html",
    "title": "Class Healthbar | PAdam Softworks",
    "keywords": "Class Healthbar Pasek życia nad przeciwnikiem Inheritance Object Healthbar Namespace : Enemy Assembly : cs.temp.dll.dll Syntax public class Healthbar : MonoBehaviour Methods SetHealth(Int32) Ustawia obecną ilość życia na pasku życia Declaration public void SetHealth(int currentHealth) Parameters Type Name Description Int32 currentHealth Ilość życia SetMaxHealth(Int32) Ustawia maksymalną ilość życia na pasku życia Declaration public void SetMaxHealth(int maxHealth) Parameters Type Name Description Int32 maxHealth Maksymalna ilość życia"
  },
  "api/Enemy.html": {
    "href": "api/Enemy.html",
    "title": "Namespace Enemy | PAdam Softworks",
    "keywords": "Namespace Enemy Classes BaseEnemy Healthbar Pasek życia nad przeciwnikiem Interfaces IEnemy Interfejs określający przeciwnika"
  },
  "api/Enemy.IEnemy.html": {
    "href": "api/Enemy.IEnemy.html",
    "title": "Interface IEnemy | PAdam Softworks",
    "keywords": "Interface IEnemy Interfejs określający przeciwnika Namespace : Enemy Assembly : cs.temp.dll.dll Syntax public interface IEnemy"
  },
  "api/Explodable.ClipperHelper.html": {
    "href": "api/Explodable.ClipperHelper.html",
    "title": "Class ClipperHelper | PAdam Softworks",
    "keywords": "Class ClipperHelper Inheritance Object ClipperHelper Namespace : Explodable Assembly : cs.temp.dll.dll Syntax public static class ClipperHelper Methods Clip(List<Vector2>, List<Vector2>) Declaration public static List<List<Vector2>> Clip(List<Vector2> boundary, List<Vector2> region) Parameters Type Name Description List < Vector2 > boundary List < Vector2 > region Returns Type Description List < List < Vector2 >> Clip(List<Vector2>, Triangle) Declaration public static List<List<Vector2>> Clip(List<Vector2> boundary, Triangle piece) Parameters Type Name Description List < Vector2 > boundary Triangle piece Returns Type Description List < List < Vector2 >>"
  },
  "api/Explodable.Explodable.html": {
    "href": "api/Explodable.Explodable.html",
    "title": "Class Explodable | PAdam Softworks",
    "keywords": "Class Explodable Inheritance Object Explodable Namespace : Explodable Assembly : cs.temp.dll.dll Syntax public class Explodable : MonoBehaviour Fields allowRuntimeFragmentation Generowanie fragmentów podczas rozgrywki Declaration public bool allowRuntimeFragmentation Field Value Type Description Boolean extraPoints Ilość losowo rozmieszczonych dodatkowych punktów na obiekcie Declaration public int extraPoints Field Value Type Description Int32 fragmentLayer Warstwa fragmentów którą będą posiadały nowo stworzone fragmenty Declaration public string fragmentLayer Field Value Type Description String fragmentLifetime Czas jaki fragmenty będą na planszy. 0 = nieskończoność Declaration public float fragmentLifetime Field Value Type Description Single fragments List stworzonych obiektów Declaration public List<GameObject> fragments Field Value Type Description List < GameObject > ignoreFragmentsCollision Ignorowanie kolizji stworzonych fragmentów pomiędzy graczem a fragmentem Declaration public bool ignoreFragmentsCollision Field Value Type Description Boolean orderInLayer Kolejność w warstwie stworzonych fragmentów Declaration public int orderInLayer Field Value Type Description Int32 shatterType Rodzaj fragmentów Declaration public ShatterType shatterType Field Value Type Description ShatterType sortingLayerName Warstwa sortująca którą będą posiadały nowo stworzone fragmenty Declaration public string sortingLayerName Field Value Type Description String subshatterSteps Ile razy pętla generująca fragmenty będzie używa Declaration public int subshatterSteps Field Value Type Description Int32 Methods DeleteFragments() Usuwa wszystkie stworzone framgenty Declaration public void DeleteFragments() Explode() Tworzy nowe fragmenty Declaration public void Explode() FragmentInEditor() Tworzy nowe fragmenty i ustawia je jako nieaktywne Declaration public void FragmentInEditor()"
  },
  "api/Explodable.ExplodeOnClick.html": {
    "href": "api/Explodable.ExplodeOnClick.html",
    "title": "Class ExplodeOnClick | PAdam Softworks",
    "keywords": "Class ExplodeOnClick Klasa pomocnicza do eksplozji obiektu na kliknięciu myszką Inheritance Object ExplodeOnClick Namespace : Explodable Assembly : cs.temp.dll.dll Syntax public class ExplodeOnClick : MonoBehaviour"
  },
  "api/Explodable.ExplosionForce.html": {
    "href": "api/Explodable.ExplosionForce.html",
    "title": "Class ExplosionForce | PAdam Softworks",
    "keywords": "Class ExplosionForce Inheritance Object ExplosionForce Namespace : Explodable Assembly : cs.temp.dll.dll Syntax public class ExplosionForce : MonoBehaviour Methods DoExplosion(Vector3) Stworzenie eksplozji na danej pozycji Declaration public void DoExplosion(Vector3 position) Parameters Type Name Description Vector3 position Pozycja eksplozji"
  },
  "api/Explodable.html": {
    "href": "api/Explodable.html",
    "title": "Namespace Explodable | PAdam Softworks",
    "keywords": "Namespace Explodable Classes ClipperHelper Explodable ExplodeOnClick Klasa pomocnicza do eksplozji obiektu na kliknięciu myszką ExplosionForce SpriteExploder Enums ShatterType Typ rozwalenia"
  },
  "api/Explodable.ShatterType.html": {
    "href": "api/Explodable.ShatterType.html",
    "title": "Enum ShatterType | PAdam Softworks",
    "keywords": "Enum ShatterType Typ rozwalenia Namespace : Explodable Assembly : cs.temp.dll.dll Syntax public enum ShatterType Fields Name Description Triangle Voronoi"
  },
  "api/Explodable.SpriteExploder.html": {
    "href": "api/Explodable.SpriteExploder.html",
    "title": "Class SpriteExploder | PAdam Softworks",
    "keywords": "Class SpriteExploder Inheritance Object SpriteExploder Namespace : Explodable Assembly : cs.temp.dll.dll Syntax public static class SpriteExploder Methods GenerateTriangularPieces(GameObject, Int32, Int32, Material) Generowanie fragmentów na podstawie trójkątów Declaration public static List<GameObject> GenerateTriangularPieces(GameObject source, int extraPoints = 0, int subshatterSteps = 0, Material mat = null) Parameters Type Name Description GameObject source Rodzic z którego będą tworzone fragmenty Int32 extraPoints Dodatkowe ilość losowo rozmieszczonych punkty Int32 subshatterSteps Dodatkowo ilość przejścia pętli generującej fragmenty Material mat Opcjonalny material inny niż rodzica Returns Type Description List < GameObject > Zwraca listę obiektów GenerateVoronoiPieces(GameObject, Int32, Int32, Material) Generowanie fragmentów na podstawie voronai Declaration public static List<GameObject> GenerateVoronoiPieces(GameObject source, int extraPoints = 0, int subshatterSteps = 0, Material mat = null) Parameters Type Name Description GameObject source Rodzic z którego będą tworzone fragmenty Int32 extraPoints Dodatkowe ilość losowo rozmieszczonych punkty Int32 subshatterSteps Dodatkowo ilość przejścia pętli generującej fragmenty Material mat Opcjonalny material inny niż rodzica Returns Type Description List < GameObject > Zwraca listę obiektów"
  },
  "api/Global.AttackController.html": {
    "href": "api/Global.AttackController.html",
    "title": "Class AttackController | PAdam Softworks",
    "keywords": "Class AttackController Inheritance Object AttackController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AttackController : MonoBehaviour"
  },
  "api/Global.CoinsController.html": {
    "href": "api/Global.CoinsController.html",
    "title": "Class CoinsController | PAdam Softworks",
    "keywords": "Class CoinsController Inheritance Object CoinsController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CoinsController : MonoBehaviour Fields coinsText Tekst wyświetląjący aktualną ilość monet Declaration public Text coinsText Field Value Type Description Text Properties CoinsCount Ilość zdobytych monet Declaration public int CoinsCount { get; } Property Value Type Description Int32 Methods SetCoinsCount(Int32) Ustaw ilość zdobytych monet Declaration public void SetCoinsCount(int count) Parameters Type Name Description Int32 count Nowa ilość monet"
  },
  "api/Global.DeathZone.html": {
    "href": "api/Global.DeathZone.html",
    "title": "Class DeathZone | PAdam Softworks",
    "keywords": "Class DeathZone Inheritance Object DeathZone Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DeathZone : MonoBehaviour"
  },
  "api/Global.DestroyAfterTime.html": {
    "href": "api/Global.DestroyAfterTime.html",
    "title": "Class DestroyAfterTime | PAdam Softworks",
    "keywords": "Class DestroyAfterTime Inheritance Object DestroyAfterTime Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DestroyAfterTime : MonoBehaviour"
  },
  "api/Global.DisableRendererOnStart.html": {
    "href": "api/Global.DisableRendererOnStart.html",
    "title": "Class DisableRendererOnStart | PAdam Softworks",
    "keywords": "Class DisableRendererOnStart Inheritance Object DisableRendererOnStart Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DisableRendererOnStart : MonoBehaviour"
  },
  "api/Global.EnemySpawner.html": {
    "href": "api/Global.EnemySpawner.html",
    "title": "Class EnemySpawner | PAdam Softworks",
    "keywords": "Class EnemySpawner Inheritance Object EnemySpawner Namespace : Global Assembly : cs.temp.dll.dll Syntax public class EnemySpawner : MonoBehaviour Fields SpawnCount Ilość mobów jakie się pojawią (-1 = nieskończoność) Declaration public int SpawnCount Field Value Type Description Int32 SpawnDelay Czas w sekundach między respawnami Declaration public float SpawnDelay Field Value Type Description Single spawnDirection Kierunek w którym mob będzie się poruszał Declaration public Vector2 spawnDirection Field Value Type Description Vector2 SpawnPrefab Mob jaki zostanie zrespiony Declaration public GameObject SpawnPrefab Field Value Type Description GameObject"
  },
  "api/Global.GlobalLabels.html": {
    "href": "api/Global.GlobalLabels.html",
    "title": "Class GlobalLabels | PAdam Softworks",
    "keywords": "Class GlobalLabels Inheritance Object GlobalLabels Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GlobalLabels Fields Door Declaration public static string Door Field Value Type Description String EnemyProjectile Declaration public static string EnemyProjectile Field Value Type Description String EnemyTag Declaration public static string EnemyTag Field Value Type Description String HorizontalAxis Declaration public static string HorizontalAxis Field Value Type Description String InvisibleWallLayer Declaration public static string InvisibleWallLayer Field Value Type Description String PlayerProjectile Declaration public static string PlayerProjectile Field Value Type Description String PlayerTag Declaration public static string PlayerTag Field Value Type Description String VerticalAxis Declaration public static string VerticalAxis Field Value Type Description String"
  },
  "api/Global.GraphicsSettingsMenu.html": {
    "href": "api/Global.GraphicsSettingsMenu.html",
    "title": "Class GraphicsSettingsMenu | PAdam Softworks",
    "keywords": "Class GraphicsSettingsMenu Inheritance Object GraphicsSettingsMenu Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GraphicsSettingsMenu : MonoBehaviour Methods SetFullscreen(Boolean) Zmiana stan okna z grą Declaration public void SetFullscreen(bool isFullscreen) Parameters Type Name Description Boolean isFullscreen Czy okno ma być na fullscreenie SetGraphicsQuality(Int32) Zmiana jakości grafiki Declaration public void SetGraphicsQuality(int index) Parameters Type Name Description Int32 index Indeks jakości grafiki SetResolution(Int32) Zmiana rozdzielczości okna z grą Declaration public void SetResolution(int index) Parameters Type Name Description Int32 index Indeks rozdzielczości"
  },
  "api/Global.HoboController.html": {
    "href": "api/Global.HoboController.html",
    "title": "Class HoboController | PAdam Softworks",
    "keywords": "Class HoboController Inheritance Object HoboController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class HoboController : BaseEnemy Fields AnimationTimeScale Declaration public float AnimationTimeScale Field Value Type Description Single bloodSplashEffect Declaration public GameObject bloodSplashEffect Field Value Type Description GameObject HurtSounds Declaration public List<AudioClip> HurtSounds Field Value Type Description List < AudioClip > isMove Declaration public bool isMove Field Value Type Description Boolean moveDirection Declaration public Vector2 moveDirection Field Value Type Description Vector2 Speed Declaration public float Speed Field Value Type Description Single WalkFrames Declaration public List<Texture2D> WalkFrames Field Value Type Description List < Texture2D > Methods OnDamaged(Int32) Declaration public void OnDamaged(int damage) Parameters Type Name Description Int32 damage OnDeath() Declaration public void OnDeath()"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | PAdam Softworks",
    "keywords": "Namespace Global Classes AttackController CoinsController DeathZone DestroyAfterTime DisableRendererOnStart EnemySpawner GlobalLabels GraphicsSettingsMenu HoboController Inventory Bazowa klasa ekwipunku. Obsługuje dodawanie i odejmowanie rzeczy w \"ekwipunku\" gracza. Klasa również wystawia metody niezbędne do obserwowania, czy coś się zmieniło w kolekcji przedmiotów. InventoryController Kontroler dla ekwipunku gracza. Item Model przedmiot�w w grze ItemController Kontroler zachowań przedmiotów na mapie. LootTable LootTableItem MainMenuController MovingPlatformController Obstacle OrmBossController ParallaxBackground PauseMenu PlayAudioOnTrigger PlayerController PlayerTestingUI ProjectileController RollingBallController ScoreManager ScrollingCameraController SpiderController StatisticsManager TestInventory Testuje klase Inventory TestPowerupDrop TimerController ToggleGameobject TurretController Tutorial Interfaces IInventory Inerfejs dostarczający podstawowe operacje na ekwipunku Enums Item.ItemType"
  },
  "api/Global.IInventory.html": {
    "href": "api/Global.IInventory.html",
    "title": "Interface IInventory | PAdam Softworks",
    "keywords": "Interface IInventory Inerfejs dostarczający podstawowe operacje na ekwipunku Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IInventory Methods AddItem(Item) Dodaje przedmiot do ekwipunku Declaration void AddItem(Item item) Parameters Type Name Description Item item Przedmiot do dodania RemoveItem(Item) Usuwa przedmiot z ewkipunku Declaration void RemoveItem(Item item) Parameters Type Name Description Item item Przedmiot do usunięcia"
  },
  "api/Global.Inventory.html": {
    "href": "api/Global.Inventory.html",
    "title": "Class Inventory | PAdam Softworks",
    "keywords": "Class Inventory Bazowa klasa ekwipunku. Obsługuje dodawanie i odejmowanie rzeczy w \"ekwipunku\" gracza. Klasa również wystawia metody niezbędne do obserwowania, czy coś się zmieniło w kolekcji przedmiotów. Inheritance Object Inventory Implements IInventory Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Inventory : IInventory Properties ItemList Lista przedmiotów w ekwpiunku. Declaration public ReadOnlyCollection<Item> ItemList { get; } Property Value Type Description ReadOnlyCollection < Item > Methods AddItem(Item) Dodaje przedmiot do ekwipunku Declaration public void AddItem(Item item) Parameters Type Name Description Item item Przedmiot do dodania RemoveItem(Item) Usuwa przedmiot z ewkipunku Declaration public void RemoveItem(Item item) Parameters Type Name Description Item item Przedmiot do usunięcia Events CollectionChanged Zdarzenie informujące o zmianie kolekcji przedmiotów. Declaration public event EventHandler<Item> CollectionChanged Event Type Type Description EventHandler < Item > Remarks Zostaje wywołane po użyciu metody Inventory.AddItem(Item) oraz Inventory.RemoveItem(Item) Implements IInventory"
  },
  "api/Global.InventoryController.html": {
    "href": "api/Global.InventoryController.html",
    "title": "Class InventoryController | PAdam Softworks",
    "keywords": "Class InventoryController Kontroler dla ekwipunku gracza. Inheritance Object InventoryController Implements IInventory Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryController : MonoBehaviour, IInventory Properties Inventory Bazowa klasa ekwipunku Declaration public Inventory Inventory { get; } Property Value Type Description Inventory Methods AddItem(Item) Dodaje przedmiot do ekwipunku Declaration public void AddItem(Item item) Parameters Type Name Description Item item Przedmiot do dodania RemoveItem(Item) Usuwa przedmiot z ewkipunku Declaration public void RemoveItem(Item item) Parameters Type Name Description Item item Przedmiot do usunięcia Implements IInventory"
  },
  "api/Global.Item.html": {
    "href": "api/Global.Item.html",
    "title": "Class Item | PAdam Softworks",
    "keywords": "Class Item Model przedmiot�w w grze Inheritance Object Item Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Item Fields ID ID przedmiotu Declaration public int ID Field Value Type Description Int32 IsStackable Okre�la, czy przedmiot mo�e ��czy� si� z innymi przedmiotami tego samego typu Declaration public bool IsStackable Field Value Type Description Boolean Name Nazwa przedmiotu Declaration public string Name Field Value Type Description String Quantity Ilo�� przedmiotu Declaration public int Quantity Field Value Type Description Int32 Texture Tekstura reprezentuj�ca przedmot Declaration public string Texture Field Value Type Description String Type Typ przedmiotu Declaration public Item.ItemType Type Field Value Type Description Item.ItemType"
  },
  "api/Global.Item.ItemType.html": {
    "href": "api/Global.Item.ItemType.html",
    "title": "Enum Item.ItemType | PAdam Softworks",
    "keywords": "Enum Item.ItemType Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum ItemType Fields Name Description Ammunition Health Money PowerUp"
  },
  "api/Global.ItemController.html": {
    "href": "api/Global.ItemController.html",
    "title": "Class ItemController | PAdam Softworks",
    "keywords": "Class ItemController Kontroler zachowań przedmiotów na mapie. Inheritance Object ItemController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ItemController : MonoBehaviour Fields ItemData Declaration public TextAsset ItemData Field Value Type Description TextAsset"
  },
  "api/Global.LootTable.html": {
    "href": "api/Global.LootTable.html",
    "title": "Class LootTable | PAdam Softworks",
    "keywords": "Class LootTable Inheritance Object LootTable Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LootTable : MonoBehaviour Fields lootTable Declaration public List<LootTableItem> lootTable Field Value Type Description List < LootTableItem > Methods ChooseItem() Wybranie jednego przedmiotu z loot table Declaration public LootTableItem ChooseItem() Returns Type Description LootTableItem Zwraca jeden LootTableItem SpawnItem() Wybiera jeden przedmiot z loot table i tworzy go Declaration public void SpawnItem()"
  },
  "api/Global.LootTableItem.html": {
    "href": "api/Global.LootTableItem.html",
    "title": "Class LootTableItem | PAdam Softworks",
    "keywords": "Class LootTableItem Inheritance Object LootTableItem Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LootTableItem Properties Item Declaration public GameObject Item { get; } Property Value Type Description GameObject Weight Declaration public int Weight { get; } Property Value Type Description Int32"
  },
  "api/Global.MainMenuController.html": {
    "href": "api/Global.MainMenuController.html",
    "title": "Class MainMenuController | PAdam Softworks",
    "keywords": "Class MainMenuController Inheritance Object MainMenuController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MainMenuController : MonoBehaviour Methods QuitGame() Wychodzi całkowicie z gry Declaration public void QuitGame() StartGame() Startuje rozgrywkę Declaration public void StartGame()"
  },
  "api/Global.MovingPlatformController.html": {
    "href": "api/Global.MovingPlatformController.html",
    "title": "Class MovingPlatformController | PAdam Softworks",
    "keywords": "Class MovingPlatformController Inheritance Object MovingPlatformController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MovingPlatformController : MonoBehaviour Fields Direction Declaration public Vector2 Direction Field Value Type Description Vector2 PositionDelta Declaration public Vector3 PositionDelta Field Value Type Description Vector3 Speed Declaration public float Speed Field Value Type Description Single"
  },
  "api/Global.Obstacle.html": {
    "href": "api/Global.Obstacle.html",
    "title": "Class Obstacle | PAdam Softworks",
    "keywords": "Class Obstacle Inheritance Object Obstacle Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Obstacle : MonoBehaviour Fields EnemyDamage Obrażenia które otrzyma przeciwnik Declaration public int EnemyDamage Field Value Type Description Int32 PlayerDamage Obrażenia które otrzyma postać gracza Declaration public int PlayerDamage Field Value Type Description Int32"
  },
  "api/Global.OrmBossController.html": {
    "href": "api/Global.OrmBossController.html",
    "title": "Class OrmBossController | PAdam Softworks",
    "keywords": "Class OrmBossController Inheritance Object OrmBossController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class OrmBossController : BaseEnemy Fields AnimationTimeScale Declaration public float AnimationTimeScale Field Value Type Description Single Atk1AttackFrames Declaration public List<Texture2D> Atk1AttackFrames Field Value Type Description List < Texture2D > Atk1ProjectilePrefab Declaration public GameObject Atk1ProjectilePrefab Field Value Type Description GameObject Atk1WalkFrames Declaration public List<Texture2D> Atk1WalkFrames Field Value Type Description List < Texture2D > bloodSplashEffect Declaration public GameObject bloodSplashEffect Field Value Type Description GameObject DamageSound Declaration public AudioClip DamageSound Field Value Type Description AudioClip DeathSound Declaration public AudioClip DeathSound Field Value Type Description AudioClip HealthCanvas Declaration public GameObject HealthCanvas Field Value Type Description GameObject IdleFrames Declaration public List<Texture2D> IdleFrames Field Value Type Description List < Texture2D > isMove Declaration public bool isMove Field Value Type Description Boolean moveDirection Declaration public Vector2 moveDirection Field Value Type Description Vector2 Speed Declaration public float Speed Field Value Type Description Single WalkFrames Declaration public List<Texture2D> WalkFrames Field Value Type Description List < Texture2D > Methods OnDamaged() Declaration public void OnDamaged() OnDeath() Declaration public void OnDeath()"
  },
  "api/Global.ParallaxBackground.html": {
    "href": "api/Global.ParallaxBackground.html",
    "title": "Class ParallaxBackground | PAdam Softworks",
    "keywords": "Class ParallaxBackground Inheritance Object ParallaxBackground Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ParallaxBackground : MonoBehaviour"
  },
  "api/Global.PauseMenu.html": {
    "href": "api/Global.PauseMenu.html",
    "title": "Class PauseMenu | PAdam Softworks",
    "keywords": "Class PauseMenu Inheritance Object PauseMenu Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PauseMenu : MonoBehaviour Fields IsDeathMenu Declaration public bool IsDeathMenu Field Value Type Description Boolean IsPaused Declaration public static bool IsPaused Field Value Type Description Boolean pauseMenuUI Declaration public GameObject pauseMenuUI Field Value Type Description GameObject resumeButtonUi Declaration public GameObject resumeButtonUi Field Value Type Description GameObject Methods OpenMenu() Przejście do głównego menu Declaration public void OpenMenu() Pause(Boolean) Declaration public void Pause(bool OnPlayerDeath = false) Parameters Type Name Description Boolean OnPlayerDeath QuitGame() Declaration public void QuitGame() Restart() Declaration public void Restart() Resume() Declaration public void Resume()"
  },
  "api/Global.PlayAudioOnTrigger.html": {
    "href": "api/Global.PlayAudioOnTrigger.html",
    "title": "Class PlayAudioOnTrigger | PAdam Softworks",
    "keywords": "Class PlayAudioOnTrigger Inheritance Object PlayAudioOnTrigger Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayAudioOnTrigger : MonoBehaviour Fields AudioSource Declaration public AudioSource AudioSource Field Value Type Description AudioSource ReplaceSound Declaration public AudioClip ReplaceSound Field Value Type Description AudioClip SoundsToPlay Declaration public List<AudioClip> SoundsToPlay Field Value Type Description List < AudioClip > Methods StopAudio() Declaration public void StopAudio()"
  },
  "api/Global.PlayerController.html": {
    "href": "api/Global.PlayerController.html",
    "title": "Class PlayerController | PAdam Softworks",
    "keywords": "Class PlayerController Inheritance Object PlayerController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerController : MonoBehaviour Fields Attack2Frames Grafiki ataku 2 Declaration public List<Texture2D> Attack2Frames Field Value Type Description List < Texture2D > Attack2Sounds Declaration public List<AudioClip> Attack2Sounds Field Value Type Description List < AudioClip > AttackFrames Grafiki ataku 1 Declaration public List<Texture2D> AttackFrames Field Value Type Description List < Texture2D > AttackFX Declaration public GameObject AttackFX Field Value Type Description GameObject AttackSounds Declaration public List<AudioClip> AttackSounds Field Value Type Description List < AudioClip > coyoteTimeDefault Czas przez jaki można podskoczyć po opuszczeniu platformy Declaration public float coyoteTimeDefault Field Value Type Description Single DeathSounds Declaration public List<AudioClip> DeathSounds Field Value Type Description List < AudioClip > FallFrames Grafiki spadania Declaration public List<Texture2D> FallFrames Field Value Type Description List < Texture2D > floorCollider Declaration public Collider2D floorCollider Field Value Type Description Collider2D GroundMask Maska zawierająca warstwy uznawane za podłoże Declaration public LayerMask GroundMask Field Value Type Description LayerMask HurtFrames Grafiki otrzymywania obrażeń Declaration public List<Texture2D> HurtFrames Field Value Type Description List < Texture2D > HurtSounds Declaration public List<AudioClip> HurtSounds Field Value Type Description List < AudioClip > IdleFrames Grafiki stania w miejscu Declaration public List<Texture2D> IdleFrames Field Value Type Description List < Texture2D > JumpFrames Grafiki skakania Declaration public List<Texture2D> JumpFrames Field Value Type Description List < Texture2D > JumpSounds Declaration public List<AudioClip> JumpSounds Field Value Type Description List < AudioClip > KnockbackSpeed Moc odrzutu bohatera po zostaniu trafionym Declaration public float KnockbackSpeed Field Value Type Description Single ProjectileLifetime Declaration public float ProjectileLifetime Field Value Type Description Single ProjectilePrefab Obiekt pocisku wystrzeliwanego przez gracza Declaration public GameObject ProjectilePrefab Field Value Type Description GameObject ProjectileSpeed Prędkość lotu ciupagi Declaration public float ProjectileSpeed Field Value Type Description Single SlowDownRate Współczynnik spowalniania bohatera gdy nie są naciśnięte przyciski poruszania Declaration public float SlowDownRate Field Value Type Description Single SpeedAirbone Prędkość poruszania się w powietrzu Declaration public float SpeedAirbone Field Value Type Description Single SpeedDoubleJump Moc drugiego skoku bohatera Declaration public float SpeedDoubleJump Field Value Type Description Single SpeedGrounded Declaration public float SpeedGrounded Field Value Type Description Single SpeedJump Moc skoku bohatera Declaration public float SpeedJump Field Value Type Description Single WalkFrames Grafiki chodzenia Declaration public List<Texture2D> WalkFrames Field Value Type Description List < Texture2D > WalkSounds Declaration public List<AudioClip> WalkSounds Field Value Type Description List < AudioClip > Properties canDoubleJump Czy gracz może skoczyć dwukrotnie Declaration public bool canDoubleJump { get; } Property Value Type Description Boolean canJump Czy gracz może skoczyć Declaration public bool canJump { get; } Property Value Type Description Boolean isGrounded Czy gracz jest na ziemi Declaration public bool isGrounded { get; } Property Value Type Description Boolean isOnMoving Czy gracz jest na ruchomej platformie Declaration public bool isOnMoving { get; } Property Value Type Description Boolean rb Ciało fizyczne gracza Declaration public Rigidbody2D rb { get; } Property Value Type Description Rigidbody2D wasHit Czy gracz jest oszołomiony Declaration public bool wasHit { get; } Property Value Type Description Boolean Methods OnDamageTaken(Int32) Declaration public void OnDamageTaken(int damage) Parameters Type Name Description Int32 damage OnDeath() Declaration public void OnDeath() ReceiveDamageKnockback(Vector3, Int32, Single) Gracz zostaje ogłuszony i popchnięty w kierunku odwrotnym do źródła obrażeń Declaration public void ReceiveDamageKnockback(Vector3 source, int damage = 1, float recoveryTime = 0.5F) Parameters Type Name Description Vector3 source Int32 damage Single recoveryTime czas ogłuszenia gracza"
  },
  "api/Global.PlayerTestingUI.html": {
    "href": "api/Global.PlayerTestingUI.html",
    "title": "Class PlayerTestingUI | PAdam Softworks",
    "keywords": "Class PlayerTestingUI Inheritance Object PlayerTestingUI Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerTestingUI : MonoBehaviour Fields TestingUI Declaration public GameObject TestingUI Field Value Type Description GameObject UITextPrefab Declaration public GameObject UITextPrefab Field Value Type Description GameObject"
  },
  "api/Global.ProjectileController.html": {
    "href": "api/Global.ProjectileController.html",
    "title": "Class ProjectileController | PAdam Softworks",
    "keywords": "Class ProjectileController Inheritance Object ProjectileController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ProjectileController : MonoBehaviour Fields AnimSpeed Długość trwania animacji Declaration public int AnimSpeed Field Value Type Description Int32 FlipDirection Jeżeli true, odwraca domyślny kierunek tekstury Declaration public bool FlipDirection Field Value Type Description Boolean Frames Klatki animacji Declaration public List<Texture2D> Frames Field Value Type Description List < Texture2D > Methods Shoot(Vector3, Single, Vector2, Single, Int32) Nadaje pociskowi prędkość w określonym kierunku i czas trwania Declaration public void Shoot(Vector3 position, float speed, Vector2 direction, float lifeTime, int layer = 10) Parameters Type Name Description Vector3 position miejsce w którym pocisk się pojawia (world space) Single speed prędkość pocisku (stała) Vector2 direction kierunek Single lifeTime czas żywota Int32 layer warstwa fizyczna (domyślnie PhysicalProjectile)"
  },
  "api/Global.RollingBallController.html": {
    "href": "api/Global.RollingBallController.html",
    "title": "Class RollingBallController | PAdam Softworks",
    "keywords": "Class RollingBallController Inheritance Object BaseEnemy RollingBallController Implements IEnemy Inherited Members BaseEnemy.scoreOnKill Namespace : Global Assembly : cs.temp.dll.dll Syntax public class RollingBallController : BaseEnemy, IEnemy Fields bloodSplashEffect Declaration public GameObject bloodSplashEffect Field Value Type Description GameObject RollingSpeed Prędkość toczenia się obiektu (i kierunek) Declaration public float RollingSpeed Field Value Type Description Single Methods OnDeath() Declaration public void OnDeath() Implements IEnemy"
  },
  "api/Global.ScoreManager.html": {
    "href": "api/Global.ScoreManager.html",
    "title": "Class ScoreManager | PAdam Softworks",
    "keywords": "Class ScoreManager Inheritance Object ScoreManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ScoreManager : MonoBehaviour Fields scoreText Tekst który będzie aktualizowany po zmianie punktów Declaration public Text scoreText Field Value Type Description Text Properties ScoreCount Ilość zdobytych punktów Declaration public int ScoreCount { get; } Property Value Type Description Int32 Methods AddScore(Int32) Dodaj punkty Declaration public void AddScore(int scoreToAdd) Parameters Type Name Description Int32 scoreToAdd Ilość punktów do dodania RemoveScore(Int32) Usuwa podaną liczbę punktów z wyniku. Wynik będzie zawsze dodatni Declaration public void RemoveScore(int scoreToRemove) Parameters Type Name Description Int32 scoreToRemove Ilość punktów do usunięcia ResetScore() Resetuje licznik wyników do 0 Declaration public void ResetScore()"
  },
  "api/Global.ScrollingCameraController.html": {
    "href": "api/Global.ScrollingCameraController.html",
    "title": "Class ScrollingCameraController | PAdam Softworks",
    "keywords": "Class ScrollingCameraController Inheritance Object ScrollingCameraController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ScrollingCameraController : MonoBehaviour Fields HeightOffset Declaration public float HeightOffset Field Value Type Description Single SmoothTime Declaration public float SmoothTime Field Value Type Description Single"
  },
  "api/Global.SpiderController.html": {
    "href": "api/Global.SpiderController.html",
    "title": "Class SpiderController | PAdam Softworks",
    "keywords": "Class SpiderController Inheritance Object SpiderController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SpiderController : MonoBehaviour Fields AnimationTimeScale Declaration public float AnimationTimeScale Field Value Type Description Single isMove Declaration public bool isMove Field Value Type Description Boolean Speed Declaration public float Speed Field Value Type Description Single WalkFrames Declaration public List<Texture2D> WalkFrames Field Value Type Description List < Texture2D >"
  },
  "api/Global.StatisticsManager.html": {
    "href": "api/Global.StatisticsManager.html",
    "title": "Class StatisticsManager | PAdam Softworks",
    "keywords": "Class StatisticsManager Inheritance Object StatisticsManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StatisticsManager : Singleton<StatisticsManager> Properties BossesKilled Liczba zabitych bosów przez gracza Declaration public int BossesKilled { get; set; } Property Value Type Description Int32 DamageTaken Suma otrzymanych obrażeń Declaration public int DamageTaken { get; set; } Property Value Type Description Int32 Deaths Suma wszystkich śmierci gracza Declaration public int Deaths { get; set; } Property Value Type Description Int32 DistanceTraveled Przebyty dystans gracza w metrach Declaration public float DistanceTraveled { get; set; } Property Value Type Description Single HighestCoin Największa ilość monet uzyskana przez gracza Declaration public int HighestCoin { get; set; } Property Value Type Description Int32 HighestScore Największa ilość punktów uzyskana przez gracza Declaration public int HighestScore { get; set; } Property Value Type Description Int32 ItemsPickedUp Liczba podniesionych przedmiotów przez gracza Declaration public int ItemsPickedUp { get; set; } Property Value Type Description Int32 MonstersKilled Liczba zabitych przeciwników przez gracza Declaration public int MonstersKilled { get; set; } Property Value Type Description Int32 PowerupsPickedUp Liczba podniesionych powerupów przez gracza Declaration public int PowerupsPickedUp { get; set; } Property Value Type Description Int32 StartedGames Ilość rozpoczętych gier Declaration public int StartedGames { get; set; } Property Value Type Description Int32 TimePlayed Suma czasu w grze w sekundach Declaration public float TimePlayed { get; set; } Property Value Type Description Single Methods RestartStatistics() Resetowanie wszystkich statystyk do zera Declaration public void RestartStatistics()"
  },
  "api/Global.TestInventory.html": {
    "href": "api/Global.TestInventory.html",
    "title": "Class TestInventory | PAdam Softworks",
    "keywords": "Class TestInventory Testuje klase Inventory Inheritance Object TestInventory Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TestInventory Methods AddItem_OnExistingItem_ItemQuantityIncreased() Jak item jest w EQ to podnosi jego ilość Declaration public void AddItem_OnExistingItem_ItemQuantityIncreased() AddItem_OnNewItem_CollectionCountIncreased() Sprawdza, czy jak nie ma itemu w inventory, to dodaje nowy item do EQ Declaration public void AddItem_OnNewItem_CollectionCountIncreased() RemoveItem_OnQuantityAboveZero_ItemQuantityDecreased() Sprawdza, czy ilość przedmiotów w ekwipunku zostaje obniżona, o ile różnica przedmiów jest większa niż 0 Declaration public void RemoveItem_OnQuantityAboveZero_ItemQuantityDecreased() RemoveItem_OnQuantityBelowZero_ItemRemoved() Jeżeli ilość przedmiotów w eq jest mniejsza niż 0, to powinen zostać skasowany Declaration public void RemoveItem_OnQuantityBelowZero_ItemRemoved()"
  },
  "api/Global.TestPowerupDrop.html": {
    "href": "api/Global.TestPowerupDrop.html",
    "title": "Class TestPowerupDrop | PAdam Softworks",
    "keywords": "Class TestPowerupDrop Inheritance Object TestPowerupDrop Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TestPowerupDrop : MonoBehaviour Methods DropItem() Testowa funkcja tworzaca drop przedmiotu Declaration public void DropItem()"
  },
  "api/Global.TimerController.html": {
    "href": "api/Global.TimerController.html",
    "title": "Class TimerController | PAdam Softworks",
    "keywords": "Class TimerController Inheritance Object TimerController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TimerController : MonoBehaviour Fields Instance Declaration public static TimerController Instance Field Value Type Description TimerController timeCounter Tekst aktualizowany po zmianie czasu Declaration public Text timeCounter Field Value Type Description Text Properties GetElapsedTime Czas, jaki upłynął od włączenia timera w sekundach Declaration public float GetElapsedTime { get; } Property Value Type Description Single IsTimerActive Stan timera, czy jest aktywny bądź zastopowany Declaration public bool IsTimerActive { get; } Property Value Type Description Boolean Methods ResumeTimer() Wznawia działanie timera, jeśli został on zatrzymany Declaration public void ResumeTimer() StartTimer(Boolean) Uruchamia/restartuje timer. Powinien być wywoływany przez scene controller / level controller Declaration public void StartTimer(bool resetTime = true) Parameters Type Name Description Boolean resetTime Prawda jeśli czas ma być wyzerowany, fałsz jeśli licznik czasu ma być kontynuowany StopTimer() Zatrzymuje timer. Nie resetuje czasu Declaration public void StopTimer()"
  },
  "api/Global.ToggleGameobject.html": {
    "href": "api/Global.ToggleGameobject.html",
    "title": "Class ToggleGameobject | PAdam Softworks",
    "keywords": "Class ToggleGameobject Inheritance Object ToggleGameobject Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ToggleGameobject : MonoBehaviour Fields GameObjectsToToggle Declaration public List<GameObject> GameObjectsToToggle Field Value Type Description List < GameObject >"
  },
  "api/Global.TurretController.html": {
    "href": "api/Global.TurretController.html",
    "title": "Class TurretController | PAdam Softworks",
    "keywords": "Class TurretController Inheritance Object TurretController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TurretController : BaseEnemy Fields AttackSound Declaration public AudioClip AttackSound Field Value Type Description AudioClip BarrelPivot Oś obrotu lufy Declaration public GameObject BarrelPivot Field Value Type Description GameObject bloodSplashEffect Efekt śmierci Declaration public GameObject bloodSplashEffect Field Value Type Description GameObject DamageSound Declaration public AudioClip DamageSound Field Value Type Description AudioClip IsAutoShoot Czy działko strzela cały czas? Declaration public bool IsAutoShoot Field Value Type Description Boolean IsTrap Czy działko jest aktywowane płytą naciskową? Declaration public bool IsTrap Field Value Type Description Boolean MaxAngle Maksymalne wychylenie lufy Declaration public float MaxAngle Field Value Type Description Single MaxRange Maksymalna odległość celu Declaration public float MaxRange Field Value Type Description Single PlayerSpottedDelayDefault Czas między zauważeniem gracza a strzałem Declaration public float PlayerSpottedDelayDefault Field Value Type Description Single PressurePlate Płyta Naciskowa Declaration public GameObject PressurePlate Field Value Type Description GameObject ProjectileLifetime Czas życia pocisku Declaration public float ProjectileLifetime Field Value Type Description Single ProjectilePrefab Wystrzeliwany pocisk Declaration public GameObject ProjectilePrefab Field Value Type Description GameObject ProjectileSpeed Prędkość pocisku Declaration public float ProjectileSpeed Field Value Type Description Single RaycastMask Maska do określania co blokuje linię wzroku Declaration public LayerMask RaycastMask Field Value Type Description LayerMask ShotDelayDefault Czas pomiędzy strzałami Declaration public float ShotDelayDefault Field Value Type Description Single TrackPlayer Czy działko śledzi gracza? Declaration public bool TrackPlayer Field Value Type Description Boolean Methods OnDamaged(Int32) Otrzymuje obrażenia Declaration public void OnDamaged(int damage) Parameters Type Name Description Int32 damage OnDeath() Declaration public void OnDeath()"
  },
  "api/Global.Tutorial.html": {
    "href": "api/Global.Tutorial.html",
    "title": "Class Tutorial | PAdam Softworks",
    "keywords": "Class Tutorial Inheritance Object Tutorial Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Tutorial : MonoBehaviour Fields tutorialFirst Declaration public GameObject tutorialFirst Field Value Type Description GameObject tutorialSecond Declaration public GameObject tutorialSecond Field Value Type Description GameObject tutorialThird Declaration public GameObject tutorialThird Field Value Type Description GameObject"
  },
  "api/Health.BaseHealthSystem.html": {
    "href": "api/Health.BaseHealthSystem.html",
    "title": "Class BaseHealthSystem | PAdam Softworks",
    "keywords": "Class BaseHealthSystem Podstawowy system życia obiektów Inheritance Object BaseHealthSystem EntityHealthSystem Implements IDamageable IHealthPoint IHealable IRevivable IDamageInvurnelable Namespace : Health Assembly : cs.temp.dll.dll Syntax public class BaseHealthSystem : MonoBehaviour, IDamageable, IHealthPoint, IHealable, IRevivable, IDamageInvurnelable Fields _currentHealth Declaration protected int _currentHealth Field Value Type Description Int32 _invulnerabilityTimer Declaration protected float _invulnerabilityTimer Field Value Type Description Single _invulnerable Declaration protected bool _invulnerable Field Value Type Description Boolean _maxHealth Declaration protected int _maxHealth Field Value Type Description Int32 Properties HealthValue Aktualna ilość punktów życia, nie może być większa niż MaxHealth Declaration public int HealthValue { get; } Property Value Type Description Int32 InvulnerabilityDuration Czas nieśmiertelności po otrzymaniu obrażeń w sekundach. Działa tylko gdy InvurnelableAfterDamage jest prawdą Declaration public float InvulnerabilityDuration { get; set; } Property Value Type Description Single InvurnelableAfterDamage Czy jednostka jest nieśmiertelna po otrzymaniu obrażeń Declaration public bool InvurnelableAfterDamage { get; set; } Property Value Type Description Boolean IsDead Czy jednostka jest martwa, zazwyczaj gdy HealthValue jest mniejsze od 0 Declaration public bool IsDead { get; } Property Value Type Description Boolean MaxHealth Maksymalna ilość punktów życia Declaration public int MaxHealth { get; } Property Value Type Description Int32 Methods ChangeHealth(Int32) Funckja zmieniająca aktualną ilość życia Declaration protected virtual HealthChangeResult ChangeHealth(int amount) Parameters Type Name Description Int32 amount Ilość życia do zmiany Returns Type Description HealthChangeResult Zwraca HealthChangeResult z danymi o wykonanych operacjach DisableInvulnerability() Wyłączna stan nieśmiertelności jednostki Declaration public void DisableInvulnerability() EnableInvulnerability(Boolean) Włącza stan nieśmiertelności jednostki Declaration public void EnableInvulnerability(bool enableTimer = true) Parameters Type Name Description Boolean enableTimer Czy timer nieśmiertelnośći powinien być włączony. Podczas fałszu InvulnerabilityDuration przyjmie wartość MaxValue Heal(Int32) Wyleczenie obiektu o określoną ilość życia Declaration public void Heal(int amount) Parameters Type Name Description Int32 amount Ilość życia do wyleczenia Kill() Otrzymanie śmiertelnych obrażeń Declaration public void Kill() Revive() Wskrzeszenie obiektu Declaration public void Revive() TakeDamage(Int32) Otrzymanie określonej ilości obrażeń Declaration public void TakeDamage(int damage) Parameters Type Name Description Int32 damage Ilość życia do zabrania Update() Declaration protected virtual void Update() Implements IDamageable IHealthPoint IHealable IRevivable IDamageInvurnelable"
  },
  "api/Health.EntityHealthSystem.html": {
    "href": "api/Health.EntityHealthSystem.html",
    "title": "Class EntityHealthSystem | PAdam Softworks",
    "keywords": "Class EntityHealthSystem System życia jednostek implementujący zdarzenia Inheritance Object BaseHealthSystem EntityHealthSystem Implements IDamageable IHealthPoint IHealable IRevivable IDamageInvurnelable Inherited Members BaseHealthSystem._currentHealth BaseHealthSystem._maxHealth BaseHealthSystem._invulnerable BaseHealthSystem._invulnerabilityTimer BaseHealthSystem.HealthValue BaseHealthSystem.MaxHealth BaseHealthSystem.IsDead BaseHealthSystem.InvurnelableAfterDamage BaseHealthSystem.InvulnerabilityDuration BaseHealthSystem.Update() BaseHealthSystem.TakeDamage(Int32) BaseHealthSystem.Kill() BaseHealthSystem.Heal(Int32) BaseHealthSystem.Revive() BaseHealthSystem.EnableInvulnerability(Boolean) BaseHealthSystem.DisableInvulnerability() Namespace : Health Assembly : cs.temp.dll.dll Syntax public class EntityHealthSystem : BaseHealthSystem, IDamageable, IHealthPoint, IHealable, IRevivable, IDamageInvurnelable Fields OnDamaged Zdarzenie otrzymania obrażeń przez jednostkę Declaration public UnityEvent<int> OnDamaged Field Value Type Description UnityEvent < Int32 > OnDeath Zdarzenie śmierci jednostki Declaration public UnityEvent OnDeath Field Value Type Description UnityEvent OnHealed Zdarzenie wyleczenia obrażeń Declaration public UnityEvent<int> OnHealed Field Value Type Description UnityEvent < Int32 > OnHealthChanged Zdarzenie zmiany ilości życia Declaration public UnityEvent<int> OnHealthChanged Field Value Type Description UnityEvent < Int32 > OnMaxHealthChanged Zdarzenie zmiany maksymalnej ilości życia Declaration public UnityEvent<int> OnMaxHealthChanged Field Value Type Description UnityEvent < Int32 > OnRevived Zdarzenie wskrzeszenia jednostki Declaration public UnityEvent OnRevived Field Value Type Description UnityEvent Methods ChangeHealth(Int32) Funckja zmieniająca aktualną ilość życia Declaration protected override HealthChangeResult ChangeHealth(int amount) Parameters Type Name Description Int32 amount Ilość życia do zmiany Returns Type Description HealthChangeResult Zwraca HealthChangeResult z danymi o wykonanych operacjach Overrides BaseHealthSystem.ChangeHealth(Int32) Start() Declaration protected void Start() Implements IDamageable IHealthPoint IHealable IRevivable IDamageInvurnelable"
  },
  "api/Health.HealthChangeResult.html": {
    "href": "api/Health.HealthChangeResult.html",
    "title": "Struct HealthChangeResult | PAdam Softworks",
    "keywords": "Struct HealthChangeResult Namespace : Health Assembly : cs.temp.dll.dll Syntax public struct HealthChangeResult Fields CurrentHealth Declaration public int CurrentHealth Field Value Type Description Int32 HealthBeforeUpdate Declaration public int HealthBeforeUpdate Field Value Type Description Int32 HealthChange Declaration public int HealthChange Field Value Type Description Int32 HealthChanged Declaration public bool HealthChanged Field Value Type Description Boolean"
  },
  "api/Health.HeartContainer.html": {
    "href": "api/Health.HeartContainer.html",
    "title": "Class HeartContainer | PAdam Softworks",
    "keywords": "Class HeartContainer Klasa wyświetlająca ilość żyć Inheritance Object HeartContainer Namespace : Health Assembly : cs.temp.dll.dll Syntax public class HeartContainer : MonoBehaviour Methods OnHealthChanged(Int32) Declaration public void OnHealthChanged(int newHealth) Parameters Type Name Description Int32 newHealth"
  },
  "api/Health.html": {
    "href": "api/Health.html",
    "title": "Namespace Health | PAdam Softworks",
    "keywords": "Namespace Health Classes BaseHealthSystem Podstawowy system życia obiektów EntityHealthSystem System życia jednostek implementujący zdarzenia HeartContainer Klasa wyświetlająca ilość żyć Structs HealthChangeResult Interfaces IDamageable Interfejs implementowany na obiektach które mogą otrzymać obrażenia IDamageInvurnelable IHealable Interfejs implementowany na obiektach które mogą być uleczone IHealthPoint Interfejs deklarujący odpowiednie właściwości dla systemu życia IRevivable"
  },
  "api/Health.IDamageable.html": {
    "href": "api/Health.IDamageable.html",
    "title": "Interface IDamageable | PAdam Softworks",
    "keywords": "Interface IDamageable Interfejs implementowany na obiektach które mogą otrzymać obrażenia Namespace : Health Assembly : cs.temp.dll.dll Syntax public interface IDamageable Methods Kill() Otrzymanie śmiertelnych obrażeń Declaration void Kill() TakeDamage(Int32) Otrzymanie określonej ilości obrażeń Declaration void TakeDamage(int damage) Parameters Type Name Description Int32 damage Ilość życia do zabrania"
  },
  "api/Health.IDamageInvurnelable.html": {
    "href": "api/Health.IDamageInvurnelable.html",
    "title": "Interface IDamageInvurnelable | PAdam Softworks",
    "keywords": "Interface IDamageInvurnelable Namespace : Health Assembly : cs.temp.dll.dll Syntax public interface IDamageInvurnelable Properties InvulnerabilityDuration Czas nieśmiertelności po otrzymaniu obrażeń w sekundach. Działa tylko gdy InvurnelableAfterDamage jest prawdą Declaration float InvulnerabilityDuration { get; set; } Property Value Type Description Single InvurnelableAfterDamage Czy jednostka jest nieśmiertelna po otrzymaniu obrażeń Declaration bool InvurnelableAfterDamage { get; set; } Property Value Type Description Boolean Methods DisableInvulnerability() Wyłączna stan nieśmiertelności jednostki Declaration void DisableInvulnerability() EnableInvulnerability(Boolean) Włącza stan nieśmiertelności jednostki Declaration void EnableInvulnerability(bool enableTimer = true) Parameters Type Name Description Boolean enableTimer Czy timer nieśmiertelnośći powinien być włączony. Podczas fałszu InvulnerabilityDuration przyjmie wartość MaxValue"
  },
  "api/Health.IHealable.html": {
    "href": "api/Health.IHealable.html",
    "title": "Interface IHealable | PAdam Softworks",
    "keywords": "Interface IHealable Interfejs implementowany na obiektach które mogą być uleczone Namespace : Health Assembly : cs.temp.dll.dll Syntax public interface IHealable Methods Heal(Int32) Wyleczenie obiektu o określoną ilość życia Declaration void Heal(int amount) Parameters Type Name Description Int32 amount Ilość życia do wyleczenia"
  },
  "api/Health.IHealthPoint.html": {
    "href": "api/Health.IHealthPoint.html",
    "title": "Interface IHealthPoint | PAdam Softworks",
    "keywords": "Interface IHealthPoint Interfejs deklarujący odpowiednie właściwości dla systemu życia Namespace : Health Assembly : cs.temp.dll.dll Syntax public interface IHealthPoint Properties HealthValue Aktualna ilość punktów życia, nie może być większa niż MaxHealth Declaration int HealthValue { get; } Property Value Type Description Int32 IsDead Czy jednostka jest martwa, zazwyczaj gdy HealthValue jest mniejsze od 0 Declaration bool IsDead { get; } Property Value Type Description Boolean MaxHealth Maksymalna ilość punktów życia Declaration int MaxHealth { get; } Property Value Type Description Int32"
  },
  "api/Health.IRevivable.html": {
    "href": "api/Health.IRevivable.html",
    "title": "Interface IRevivable | PAdam Softworks",
    "keywords": "Interface IRevivable Namespace : Health Assembly : cs.temp.dll.dll Syntax public interface IRevivable Methods Revive() Wskrzeszenie obiektu Declaration void Revive()"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Dokumentacja API | PAdam Softworks",
    "keywords": "Dokumentacja API"
  },
  "api/Interactable.DoorClass.html": {
    "href": "api/Interactable.DoorClass.html",
    "title": "Enum DoorClass | PAdam Softworks",
    "keywords": "Enum DoorClass Dostępne typy drzwi Namespace : Interactable Assembly : cs.temp.dll.dll Syntax public enum DoorClass Fields Name Description SteelDoor WoodenDoor"
  },
  "api/Interactable.DoorController.html": {
    "href": "api/Interactable.DoorController.html",
    "title": "Class DoorController | PAdam Softworks",
    "keywords": "Class DoorController Inheritance Object DoorController Namespace : Interactable Assembly : cs.temp.dll.dll Syntax public class DoorController : MonoBehaviour Properties DoorType Typ drzwi DoorClass Declaration public DoorClass DoorType { get; } Property Value Type Description DoorClass Methods OpenDoor() Otworzenie drzwi. Otworzenie czyli inaczej zniszczenie ich, ustawienie ich hp na zero Declaration public void OpenDoor()"
  },
  "api/Interactable.html": {
    "href": "api/Interactable.html",
    "title": "Namespace Interactable | PAdam Softworks",
    "keywords": "Namespace Interactable Classes DoorController Enums DoorClass Dostępne typy drzwi"
  },
  "api/UI.html": {
    "href": "api/UI.html",
    "title": "Namespace UI | PAdam Softworks",
    "keywords": "Namespace UI Classes PlayerStatsMenu"
  },
  "api/UI.PlayerStatsMenu.html": {
    "href": "api/UI.PlayerStatsMenu.html",
    "title": "Class PlayerStatsMenu | PAdam Softworks",
    "keywords": "Class PlayerStatsMenu Inheritance Object PlayerStatsMenu Namespace : UI Assembly : cs.temp.dll.dll Syntax public class PlayerStatsMenu : MonoBehaviour"
  },
  "api/Utilities.FadeObjectColor.html": {
    "href": "api/Utilities.FadeObjectColor.html",
    "title": "Class FadeObjectColor | PAdam Softworks",
    "keywords": "Class FadeObjectColor Inheritance Object FadeObjectColor Namespace : Utilities Assembly : cs.temp.dll.dll Syntax public class FadeObjectColor : MonoBehaviour Fields delay Declaration public float delay Field Value Type Description Single destroyObject Declaration public bool destroyObject Field Value Type Description Boolean"
  },
  "api/Utilities.html": {
    "href": "api/Utilities.html",
    "title": "Namespace Utilities | PAdam Softworks",
    "keywords": "Namespace Utilities Classes FadeObjectColor Singleton<T>"
  },
  "api/Utilities.Singleton-1.html": {
    "href": "api/Utilities.Singleton-1.html",
    "title": "Class Singleton<T> | PAdam Softworks",
    "keywords": "Class Singleton<T> Inheritance Object Singleton<T> Namespace : Utilities Assembly : cs.temp.dll.dll Syntax public abstract class Singleton<T> : MonoBehaviour where T : MonoBehaviour Type Parameters Name Description T Properties Instance Declaration public static T Instance { get; } Property Value Type Description T"
  },
  "articles/creatingItems.html": {
    "href": "articles/creatingItems.html",
    "title": "Obsługa przedmiotów | PAdam Softworks",
    "keywords": "Obsługa przedmiotów Dodawanie przedmiotu na mapę Dodając przedmiot mamy dwie drogi postępowania - stworzenie przedmiotu od początku i podmienienie pliku metadanych, lub skopiowanie już istniejącej instancji. W przypadku drugiej ścieżki należy umieścić prefab \"ItemBase\" w świecie gry. Znajduje się on w katalogu Resources/Items/ . Po utworzeniu i wybraniu z hierarchii ItemBase, w inspektorze powinien się pojawić taki widok: Dobrym nawykiem przy pracy z przedmiotami będzie zablokowanie podglądu inspektora po przez naciśnięcie ikony kłódki (patrz AD. 1). Zablokuje to zmianę widoku w przypadku, gdy klikniemy na inny obiekt w drzewku projektu. Drugim polem (AD. 2) jest miejsce, gdzie podajemy plik z metadanymi danego przedmiotu. Pliki metadanowe powinny znajdować się pod ścieżką Resources/Items/<Nazwa przedmiotu>/<Nazwa przedmiotu>.json . Po wybraniu pliku z danymi, żeby zobaczyć zmiany w edytorze należy chociaż raz uruchomić \"Play mode\". Deklarowanie nowego przedmiotu Deklaracja przedmiotu jest dość prosta. W ścieżce Resources/Items/ należy stworzyć podkatalog z nazwą przedmiotu, a w nim plik .json . Jeśli przedmiot nazywa się xyz wtedy jego ścieżka powinna przybrać formę: Resources/Items/xyz/xyz.json . W pliku JSON, zadeklarować następującą strukturę pliku: { \"IsStackable\": true, // Określa czy przedmiot łączy się z innymi przedmiotami tego samego rodzaju. \"Type\": 0, // Typ przedmiotu - niestety musi być podawany liczbowo. Wymagane, aby API wiedziało jak obsłużyć dany przedmiot. \"Quantity\": 1, // Ilość przedmiotu, który zostanie dodany do ekwipunku. \"Texture\": \"Items/xyz/xyz.png\", // Tekstura, która zostanie ustawiona na przedmiocie. \"Name\": \"xyz\" // Nazwa przedmiotu - przydatne, gdy API potrzebuje sprawdzić jaki przedmiot wpadł do ekwipunku. Jeśli nazwa przedmiotu nie zostanie podana, zostanie ustawiona nazwa pliku, skąd były pobierane metadane. } W obecnej wersji gry rozrózniamy 4 typy przedmiotów: - Money - ID: 0 - PowerUp - ID: 1 - Ammunition - ID: 2 - Health - ID: 3 Ostatnim krokiem jest dodanie tekstury xyz.png do katalogu Items/xyz ."
  },
  "articles/explodableObjects.html": {
    "href": "articles/explodableObjects.html",
    "title": "Rozstrzaskiwanie obiektów | PAdam Softworks",
    "keywords": "Rozstrzaskiwanie obiektów Dodawanie skrypty Aby dodać umiejętność rozstrzaskania się przedmiotu należy dodać skrypt Explodable . W celu działania skryptu na obiekcie potrzebny jest kolider - PolygonCollider2D albo BoxCollider2D . Skrypt może być używany na spriteach i mesh renderach. Opis poszczególnych parametrów można znaleźć w dokumentacji Explodable . Prefab Podczas tworzenie prefabu należy usunąć wszystkie wygenerowane fragmenty. Dopiero po przeniesieniu prefabu na scene, należy wygenerować fragmenty klikając przycisk Generate Fragements ."
  },
  "articles/howToAddNewDocument.html": {
    "href": "articles/howToAddNewDocument.html",
    "title": "Dodawanie nowej dokumentacji | PAdam Softworks",
    "keywords": "Dodawanie nowej dokumentacji Instalacja DocFX na lokalnej maszynie (opcjonalne) Pobierz docfx z http://dotnet.github.io/docfx/ . Oficjalna dokumentacja dokładniej opisuje jak zainstalować docfx . Pobierz docfx.zip i rozpakuj zawartość np do folderu D:\\docfx\\ . Dodaj D:\\docfx\\ do PATH dzięki czemu docfx będzie dodane jako globalna polecenie. (Na Windowsie np. set PATH=%PATH%;D:\\docfx\\ .) Tworzenie nowego dokumentu W celu dodania nowego dokumentu do dokumentacji, należy stworzyć nowy plik markdown w folderze Documentation/articles . Struktura folderu articles będzie wyglądać następująco |- articles | |- intro.md | |- howToAddNewDocument.md | |- newDocument.md | |- ...restOfDocuments | |- toc.yml Uzupełnienie nowego dokumentu zawartością w formacie markdown. O formatowaniu markdown można przyczytać więcej tutaj . Aby dodać nowo dodany dokument do paska nawigacji należy wyedytować plik articles/toc.yml Przykładowy plik toc.yml pokazany jest poniżej: - name: Strona główna href: intro.md - name: Dodawanie dokumentacji href: howToAddNewDocument.md - name: Nowy dokument href: newDocument.md Więcej na temat pliku toc.yml można przeczytać w oficjalnej dokumentacji . Testowanie lokalne Aby przetestować wprowadzone zmiany lokalnie należy zainstalować DocFX na lokalnej maszynie. Następnie w folderze Documentation wykonujemy polecenie docfx .\\docfx.json --serve . Po zbudowaniu pod adresem http://localhost:8080 znajdować się bedzię nowo zbudowana dokumentacja która powinna wyglądać podobnie do:"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Strona główna | PAdam Softworks",
    "keywords": "Strona główna Opis strony głównej"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | PAdam Softworks",
    "keywords": "This is the HOMEPAGE . Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}